# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'FlowLogFlowLogStorageArgs',
]

@pulumi.input_type
class FlowLogFlowLogStorageArgs:
    def __init__(__self__, *,
                 storage_id: Optional[pulumi.Input[str]] = None,
                 storage_topic: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] storage_id: Specify storage instance id, required while `storage_type` is `ckafka`.
        :param pulumi.Input[str] storage_topic: Specify storage topic id, required while `storage_type` is `ckafka`.
        """
        if storage_id is not None:
            pulumi.set(__self__, "storage_id", storage_id)
        if storage_topic is not None:
            pulumi.set(__self__, "storage_topic", storage_topic)

    @property
    @pulumi.getter(name="storageId")
    def storage_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specify storage instance id, required while `storage_type` is `ckafka`.
        """
        return pulumi.get(self, "storage_id")

    @storage_id.setter
    def storage_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "storage_id", value)

    @property
    @pulumi.getter(name="storageTopic")
    def storage_topic(self) -> Optional[pulumi.Input[str]]:
        """
        Specify storage topic id, required while `storage_type` is `ckafka`.
        """
        return pulumi.get(self, "storage_topic")

    @storage_topic.setter
    def storage_topic(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "storage_topic", value)


