# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tink/proto/ecdsa.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tink.proto import common_pb2 as tink_dot_proto_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16tink/proto/ecdsa.proto\x12\x12google.crypto.tink\x1a\x17tink/proto/common.proto\"\xb2\x01\n\x0b\x45\x63\x64saParams\x12/\n\thash_type\x18\x01 \x01(\x0e\x32\x1c.google.crypto.tink.HashType\x12\x34\n\x05\x63urve\x18\x02 \x01(\x0e\x32%.google.crypto.tink.EllipticCurveType\x12<\n\x08\x65ncoding\x18\x03 \x01(\x0e\x32*.google.crypto.tink.EcdsaSignatureEncoding\"h\n\x0e\x45\x63\x64saPublicKey\x12\x0f\n\x07version\x18\x01 \x01(\r\x12/\n\x06params\x18\x02 \x01(\x0b\x32\x1f.google.crypto.tink.EcdsaParams\x12\t\n\x01x\x18\x03 \x01(\x0c\x12\t\n\x01y\x18\x04 \x01(\x0c\"m\n\x0f\x45\x63\x64saPrivateKey\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x36\n\npublic_key\x18\x02 \x01(\x0b\x32\".google.crypto.tink.EcdsaPublicKey\x12\x11\n\tkey_value\x18\x03 \x01(\x0c\"A\n\x0e\x45\x63\x64saKeyFormat\x12/\n\x06params\x18\x02 \x01(\x0b\x32\x1f.google.crypto.tink.EcdsaParams*G\n\x16\x45\x63\x64saSignatureEncoding\x12\x14\n\x10UNKNOWN_ENCODING\x10\x00\x12\x0e\n\nIEEE_P1363\x10\x01\x12\x07\n\x03\x44\x45R\x10\x02\x42M\n\x1c\x63om.google.crypto.tink.protoP\x01Z+github.com/google/tink/proto/ecdsa_go_protob\x06proto3')

_ECDSASIGNATUREENCODING = DESCRIPTOR.enum_types_by_name['EcdsaSignatureEncoding']
EcdsaSignatureEncoding = enum_type_wrapper.EnumTypeWrapper(_ECDSASIGNATUREENCODING)
UNKNOWN_ENCODING = 0
IEEE_P1363 = 1
DER = 2


_ECDSAPARAMS = DESCRIPTOR.message_types_by_name['EcdsaParams']
_ECDSAPUBLICKEY = DESCRIPTOR.message_types_by_name['EcdsaPublicKey']
_ECDSAPRIVATEKEY = DESCRIPTOR.message_types_by_name['EcdsaPrivateKey']
_ECDSAKEYFORMAT = DESCRIPTOR.message_types_by_name['EcdsaKeyFormat']
EcdsaParams = _reflection.GeneratedProtocolMessageType('EcdsaParams', (_message.Message,), {
  'DESCRIPTOR' : _ECDSAPARAMS,
  '__module__' : 'tink.proto.ecdsa_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.EcdsaParams)
  })
_sym_db.RegisterMessage(EcdsaParams)

EcdsaPublicKey = _reflection.GeneratedProtocolMessageType('EcdsaPublicKey', (_message.Message,), {
  'DESCRIPTOR' : _ECDSAPUBLICKEY,
  '__module__' : 'tink.proto.ecdsa_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.EcdsaPublicKey)
  })
_sym_db.RegisterMessage(EcdsaPublicKey)

EcdsaPrivateKey = _reflection.GeneratedProtocolMessageType('EcdsaPrivateKey', (_message.Message,), {
  'DESCRIPTOR' : _ECDSAPRIVATEKEY,
  '__module__' : 'tink.proto.ecdsa_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.EcdsaPrivateKey)
  })
_sym_db.RegisterMessage(EcdsaPrivateKey)

EcdsaKeyFormat = _reflection.GeneratedProtocolMessageType('EcdsaKeyFormat', (_message.Message,), {
  'DESCRIPTOR' : _ECDSAKEYFORMAT,
  '__module__' : 'tink.proto.ecdsa_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.EcdsaKeyFormat)
  })
_sym_db.RegisterMessage(EcdsaKeyFormat)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.google.crypto.tink.protoP\001Z+github.com/google/tink/proto/ecdsa_go_proto'
  _ECDSASIGNATUREENCODING._serialized_start=536
  _ECDSASIGNATUREENCODING._serialized_end=607
  _ECDSAPARAMS._serialized_start=72
  _ECDSAPARAMS._serialized_end=250
  _ECDSAPUBLICKEY._serialized_start=252
  _ECDSAPUBLICKEY._serialized_end=356
  _ECDSAPRIVATEKEY._serialized_start=358
  _ECDSAPRIVATEKEY._serialized_end=467
  _ECDSAKEYFORMAT._serialized_start=469
  _ECDSAKEYFORMAT._serialized_end=534
# @@protoc_insertion_point(module_scope)
