"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import osmosis.epochs.query_pb2

class QueryStub:
    """Query defines the gRPC querier service."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    EpochInfos: grpc.UnaryUnaryMultiCallable[
        osmosis.epochs.query_pb2.QueryEpochsInfoRequest,
        osmosis.epochs.query_pb2.QueryEpochsInfoResponse,
    ]
    """EpochInfos provide running epochInfos"""
    CurrentEpoch: grpc.UnaryUnaryMultiCallable[
        osmosis.epochs.query_pb2.QueryCurrentEpochRequest,
        osmosis.epochs.query_pb2.QueryCurrentEpochResponse,
    ]
    """CurrentEpoch provide current epoch of specified identifier"""

class QueryServicer(metaclass=abc.ABCMeta):
    """Query defines the gRPC querier service."""

    @abc.abstractmethod
    def EpochInfos(
        self,
        request: osmosis.epochs.query_pb2.QueryEpochsInfoRequest,
        context: grpc.ServicerContext,
    ) -> osmosis.epochs.query_pb2.QueryEpochsInfoResponse:
        """EpochInfos provide running epochInfos"""
    @abc.abstractmethod
    def CurrentEpoch(
        self,
        request: osmosis.epochs.query_pb2.QueryCurrentEpochRequest,
        context: grpc.ServicerContext,
    ) -> osmosis.epochs.query_pb2.QueryCurrentEpochResponse:
        """CurrentEpoch provide current epoch of specified identifier"""

def add_QueryServicer_to_server(servicer: QueryServicer, server: grpc.Server) -> None: ...
