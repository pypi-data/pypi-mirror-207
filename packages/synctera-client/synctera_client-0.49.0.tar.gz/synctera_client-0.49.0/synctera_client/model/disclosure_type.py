# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 0.49.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from synctera_client import schemas  # noqa: F401


class DisclosureType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Describes the regulatory requirement that triggered the disclosure.
One of the following:
* `ACH_AUTHORIZATION` –
    The ACH Authorization & Agreement Disclosure serves as a method of disclosing
    and obtaining consent from a consumer to conduct ACH and pre-authorized
    electronic transactions to and from their account. Record of obtaining this
    consent should be retained, in accordance with Reg E, for no less than 2 years
    from the date the disclosure was made to the consumer.
* `CARDHOLDER_AGREEMENT` –
    The Cardholder Agreement is a legal document that details the terms of a card
    agreement between either a consumer or a business, and the financial
    institution that issues the card. The Agreement governs the use of the
    account.
* `E_SIGN` –
    US law with rules around electronic agreements/documents/disclosures:
    used to obtain consent from consumers to receive electronic communications
    (agreements, disclosures, statements, etc) about their accounts.
* `KYC_DATA_COLLECTION` –
    Document advising the customer that you will collect their personal information
    (name, date of birth, tax ID, etc.)
    and will be validating their information against external data/documentation.
* `PRIVACY_NOTICE` –
    Document that tells customers what is done with their non-public information,
    who it is shared with, how is is secured,
    and how they can opt out of it being shared beyond Synctera.
* `REG_CC` –
    US regulation that implements the Expedited Funds Availability Act:
    describes standards for when a financial institution
    makes funds available in a deposit account.
* `REG_DD` –
    US regulation that implements the Truth in Savings Act,
    to inform customers about the terms and rules for a deposit account.
* `REG_E` –
    US regulation that implements the Electronic Funds Transfer Act:
    covers liability for electronic transactions,
    disputes for fraudulent or unrecognized electronic transactions,
    and consent for electronic debits from a consumer's account.
* `TERMS_AND_CONDITIONS` –
    A detailed agreement between you and the consumer for the
    structure, terms, fees, charges, rates of the product or service,
    and the rules for the relationship between you and the consumer.
* `SC_ACCOUNT_AGREEMENT` – 
    A detailed agreement between you and the consumer for the
    structure and terms of service for smart card accounts.
* `SC_AUTO_PAYMENT` -
    A detailed agreement between you and the consumer for the
    structure and terms of service for smart card auto repayment.

    """


    class MetaOapg:
        enum_value_to_name = {
            "ACH_AUTHORIZATION": "ACH_AUTHORIZATION",
            "CARDHOLDER_AGREEMENT": "CARDHOLDER_AGREEMENT",
            "E_SIGN": "E_SIGN",
            "KYC_DATA_COLLECTION": "KYC_DATA_COLLECTION",
            "PRIVACY_NOTICE": "PRIVACY_NOTICE",
            "REG_CC": "REG_CC",
            "REG_DD": "REG_DD",
            "REG_E": "REG_E",
            "TERMS_AND_CONDITIONS": "TERMS_AND_CONDITIONS",
            "SC_ACCOUNT_AGREEMENT": "SC_ACCOUNT_AGREEMENT",
            "SC_AUTO_PAYMENT": "SC_AUTO_PAYMENT",
        }
    
    @schemas.classproperty
    def ACH_AUTHORIZATION(cls):
        return cls("ACH_AUTHORIZATION")
    
    @schemas.classproperty
    def CARDHOLDER_AGREEMENT(cls):
        return cls("CARDHOLDER_AGREEMENT")
    
    @schemas.classproperty
    def E_SIGN(cls):
        return cls("E_SIGN")
    
    @schemas.classproperty
    def KYC_DATA_COLLECTION(cls):
        return cls("KYC_DATA_COLLECTION")
    
    @schemas.classproperty
    def PRIVACY_NOTICE(cls):
        return cls("PRIVACY_NOTICE")
    
    @schemas.classproperty
    def REG_CC(cls):
        return cls("REG_CC")
    
    @schemas.classproperty
    def REG_DD(cls):
        return cls("REG_DD")
    
    @schemas.classproperty
    def REG_E(cls):
        return cls("REG_E")
    
    @schemas.classproperty
    def TERMS_AND_CONDITIONS(cls):
        return cls("TERMS_AND_CONDITIONS")
    
    @schemas.classproperty
    def SC_ACCOUNT_AGREEMENT(cls):
        return cls("SC_ACCOUNT_AGREEMENT")
    
    @schemas.classproperty
    def SC_AUTO_PAYMENT(cls):
        return cls("SC_AUTO_PAYMENT")
