{"version":3,"sources":["AntCarousel.tsx","index.tsx"],"names":["withStreamlitConnection","props","_props$args","args","content","autoplay","autoplaySpeed","dotPosition","dots","waitForAnimate","easing","effect","key","pauseOnDotsHover","pauseOnHover","animationSpeed","vertical","adaptiveHeight","height","carousel_style","returnValue","useEffect","Streamlit","setFrameHeight","contentWithCamelCase","map","slide","styleWithCamelCase","Object","entries","style","reduce","acc","_ref","_ref2","_slicedToArray","k","v","modifiedKey","replace","match","char","toUpperCase","_objectSpread","_defineProperty","carouselStyleWithCamelCase","_ref3","_ref4","React","createElement","Fragment","dangerouslySetInnerHTML","__html","customCss","Carousel","afterChange","currentSlide","setComponentValue","undefined","speed","index","ReactDOM","render","StrictMode","CarouselComponent","document","getElementById"],"mappings":"wOAqFiBA,eA3ES,SAACC,GAEzB,IAAAC,EAA2MD,EAAME,KAA1MC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SAAUC,EAAaJ,EAAbI,cAAcC,EAAWL,EAAXK,YAAaC,EAAIN,EAAJM,KAAMC,EAAcP,EAAdO,eAAeC,EAAMR,EAANQ,OAAOC,EAAMT,EAANS,OAAQC,EAAGV,EAAHU,IAAIC,EAAgBX,EAAhBW,iBAAkBC,EAAYZ,EAAZY,aAAcC,EAAcb,EAAda,eAAgBC,EAAQd,EAARc,SAAUC,EAAcf,EAAde,eAAeC,EAAMhB,EAANgB,OAAOC,EAAcjB,EAAdiB,eAAeC,EAAWlB,EAAXkB,YAG5LC,qBAAU,WACRC,IAAUC,eAAeL,KACxB,IAEH,IAAMM,EAAuBpB,EAAQqB,KAAI,SAACC,GACxC,IAAMC,EAAqBC,OAAOC,QAAQH,EAAMI,OAAOC,QACrD,SAACC,EAAGC,GAAc,IAADC,EAAAC,YAAAF,EAAA,GAAVG,EAACF,EAAA,GAAEG,EAACH,EAAA,GACHI,EAAcF,EAAEG,QAAQ,SAAS,SAACC,EAAOC,GAAI,OACjDA,EAAKC,iBAEP,OAAAC,wBAAA,GAAYX,GAAG,GAAAY,YAAA,GAAGN,EAAcD,MAElC,IAEF,OAAAM,wBAAA,GAAYjB,GAAK,IAAEI,MAAOH,OAWtBkB,EAA6BjB,OAAOC,QAAQV,GAAgBY,QAChE,SAACC,EAAGc,GAAc,IAADC,EAAAZ,YAAAW,EAAA,GAAVV,EAACW,EAAA,GAAEV,EAACU,EAAA,GACHT,EAAcF,EAAEG,QAAQ,SAAS,SAACC,EAAOC,GAAI,OACjDA,EAAKC,iBAEP,OAAAC,wBAAA,GAAYX,GAAG,GAAAY,YAAA,GAAGN,EAAcD,MAElC,IAEA,OACEW,IAAAC,cAAAD,IAAAE,SAAA,KACCF,IAAAC,cAAA,SAAOE,wBAAyB,CAACC,OAAQjC,EAAekC,aAEzDL,IAAAC,cAACK,IAAQ,CACPC,YAAanC,EAAc,SAACoC,GAA2BlC,IAAUmC,kBAAkBD,SAAkBE,EACrGrD,SAAUA,EACVC,cAAeA,EACfC,YAAaA,EACbC,KAAMA,EACNC,eAAgBA,EAChBC,OAAQA,EACRC,OAAQA,EACRC,IAAKA,EACLC,iBAAkBA,EAClBC,aAAcA,EACd6C,MAAO5C,EACPC,SAAUA,EACVC,eAAgBA,EAChBa,MAAOe,GAGbrB,EAAqBC,KAAI,SAACC,EAAYkC,GAAa,OAC7CZ,IAAAC,cAAA,OAAKrC,IAAKgD,GACRZ,IAAAC,cAAA,OACEnB,MAAOJ,EAAMI,MACbqB,wBAAyB,CAAEC,OAAQ1B,EAAMtB,oBClErDyD,IAASC,OACPd,IAAAC,cAACD,IAAMe,WAAU,KACff,IAAAC,cAACe,EAAiB,OAEpBC,SAASC,eAAe,W","file":"static/js/main.6acda223.chunk.js","sourcesContent":["import React, { useEffect} from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n\r\n} from \"streamlit-component-lib\";\r\nimport { Carousel } from 'antd';\r\n\r\n\r\nconst CarouselComponent = (props: ComponentProps) => {\r\n\r\n  const {content, autoplay, autoplaySpeed,dotPosition, dots, waitForAnimate,easing,effect, key,pauseOnDotsHover, pauseOnHover, animationSpeed, vertical, adaptiveHeight,height,carousel_style,returnValue} = props.args; //Python Args\r\n\r\n\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight(height);\r\n  }, []);\r\n\r\n  const contentWithCamelCase = content.map((slide: any) => {\r\n    const styleWithCamelCase = Object.entries(slide.style).reduce(\r\n      (acc, [k, v]) => {\r\n        const modifiedKey = k.replace(/-(.)/g, (match, char) =>\r\n          char.toUpperCase()\r\n        );\r\n        return { ...acc, [modifiedKey]: v };\r\n      },\r\n      {}\r\n    );\r\n    return { ...slide, style: styleWithCamelCase };\r\n  });\r\n\r\n\r\n  const onChange = (currentSlide: number) => {\r\n    if (returnValue) {\r\n      Streamlit.setComponentValue(currentSlide);\r\n    }\r\n  };\r\n \r\n  // Convert carousel_style to camelCase\r\n  const carouselStyleWithCamelCase = Object.entries(carousel_style).reduce(\r\n    (acc, [k, v]) => {\r\n      const modifiedKey = k.replace(/-(.)/g, (match, char) =>\r\n        char.toUpperCase()\r\n      );\r\n      return { ...acc, [modifiedKey]: v };\r\n    },\r\n    {}\r\n  );\r\n    return (\r\n      <>\r\n       <style dangerouslySetInnerHTML={{__html: carousel_style.customCss}}></style>\r\n\r\n      <Carousel\r\n        afterChange={returnValue ? (currentSlide: number) => { Streamlit.setComponentValue(currentSlide) } : undefined}\r\n        autoplay={autoplay}\r\n        autoplaySpeed={autoplaySpeed}\r\n        dotPosition={dotPosition}\r\n        dots={dots}\r\n        waitForAnimate={waitForAnimate}\r\n        easing={easing}\r\n        effect={effect}\r\n        key={key}\r\n        pauseOnDotsHover={pauseOnDotsHover}\r\n        pauseOnHover={pauseOnHover}\r\n        speed={animationSpeed}\r\n        vertical={vertical}\r\n        adaptiveHeight={adaptiveHeight}\r\n        style={carouselStyleWithCamelCase} // Apply the transformed carousel_style\r\n\r\n      >\r\n {contentWithCamelCase.map((slide: any, index: number) => (\r\n        <div key={index}>\r\n          <div\r\n            style={slide.style}\r\n            dangerouslySetInnerHTML={{ __html: slide.content }}\r\n          ></div>\r\n        </div>\r\n      ))}\r\n      </Carousel>\r\n      </>\r\n    );\r\n\r\n  };\r\n  \r\n  export default withStreamlitConnection(CarouselComponent);","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CarouselComponent from \"./AntCarousel\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CarouselComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}