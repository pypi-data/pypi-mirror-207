# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'AccountPrivilegesAccountArgs',
    'AccountPrivilegesColumnPrivilegesArgs',
    'AccountPrivilegesDatabasePrivilegesArgs',
    'AccountPrivilegesTablePrivilegesArgs',
    'AccountPrivilegesViewPrivilegesArgs',
    'DbInstanceInitParamArgs',
    'DbInstanceResourceTagArgs',
    'DbParametersParamsArgs',
    'HourdbInstanceResourceTagArgs',
]

@pulumi.input_type
class AccountPrivilegesAccountArgs:
    def __init__(__self__, *,
                 host: pulumi.Input[str],
                 user: pulumi.Input[str]):
        """
        :param pulumi.Input[str] host: account host.
        :param pulumi.Input[str] user: account name.
        """
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "user", user)

    @property
    @pulumi.getter
    def host(self) -> pulumi.Input[str]:
        """
        account host.
        """
        return pulumi.get(self, "host")

    @host.setter
    def host(self, value: pulumi.Input[str]):
        pulumi.set(self, "host", value)

    @property
    @pulumi.getter
    def user(self) -> pulumi.Input[str]:
        """
        account name.
        """
        return pulumi.get(self, "user")

    @user.setter
    def user(self, value: pulumi.Input[str]):
        pulumi.set(self, "user", value)


@pulumi.input_type
class AccountPrivilegesColumnPrivilegesArgs:
    def __init__(__self__, *,
                 column: pulumi.Input[str],
                 database: pulumi.Input[str],
                 privileges: pulumi.Input[Sequence[pulumi.Input[str]]],
                 table: pulumi.Input[str]):
        """
        :param pulumi.Input[str] column: Database column name.
        :param pulumi.Input[str] database: The name of database.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] privileges: Permission information.
        :param pulumi.Input[str] table: Database table name.
        """
        pulumi.set(__self__, "column", column)
        pulumi.set(__self__, "database", database)
        pulumi.set(__self__, "privileges", privileges)
        pulumi.set(__self__, "table", table)

    @property
    @pulumi.getter
    def column(self) -> pulumi.Input[str]:
        """
        Database column name.
        """
        return pulumi.get(self, "column")

    @column.setter
    def column(self, value: pulumi.Input[str]):
        pulumi.set(self, "column", value)

    @property
    @pulumi.getter
    def database(self) -> pulumi.Input[str]:
        """
        The name of database.
        """
        return pulumi.get(self, "database")

    @database.setter
    def database(self, value: pulumi.Input[str]):
        pulumi.set(self, "database", value)

    @property
    @pulumi.getter
    def privileges(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Permission information.
        """
        return pulumi.get(self, "privileges")

    @privileges.setter
    def privileges(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "privileges", value)

    @property
    @pulumi.getter
    def table(self) -> pulumi.Input[str]:
        """
        Database table name.
        """
        return pulumi.get(self, "table")

    @table.setter
    def table(self, value: pulumi.Input[str]):
        pulumi.set(self, "table", value)


@pulumi.input_type
class AccountPrivilegesDatabasePrivilegesArgs:
    def __init__(__self__, *,
                 database: pulumi.Input[str],
                 privileges: pulumi.Input[Sequence[pulumi.Input[str]]]):
        """
        :param pulumi.Input[str] database: The name of database.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] privileges: Permission information.
        """
        pulumi.set(__self__, "database", database)
        pulumi.set(__self__, "privileges", privileges)

    @property
    @pulumi.getter
    def database(self) -> pulumi.Input[str]:
        """
        The name of database.
        """
        return pulumi.get(self, "database")

    @database.setter
    def database(self, value: pulumi.Input[str]):
        pulumi.set(self, "database", value)

    @property
    @pulumi.getter
    def privileges(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Permission information.
        """
        return pulumi.get(self, "privileges")

    @privileges.setter
    def privileges(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "privileges", value)


@pulumi.input_type
class AccountPrivilegesTablePrivilegesArgs:
    def __init__(__self__, *,
                 database: pulumi.Input[str],
                 privileges: pulumi.Input[Sequence[pulumi.Input[str]]],
                 table: pulumi.Input[str]):
        """
        :param pulumi.Input[str] database: The name of database.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] privileges: Permission information.
        :param pulumi.Input[str] table: Database table name.
        """
        pulumi.set(__self__, "database", database)
        pulumi.set(__self__, "privileges", privileges)
        pulumi.set(__self__, "table", table)

    @property
    @pulumi.getter
    def database(self) -> pulumi.Input[str]:
        """
        The name of database.
        """
        return pulumi.get(self, "database")

    @database.setter
    def database(self, value: pulumi.Input[str]):
        pulumi.set(self, "database", value)

    @property
    @pulumi.getter
    def privileges(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Permission information.
        """
        return pulumi.get(self, "privileges")

    @privileges.setter
    def privileges(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "privileges", value)

    @property
    @pulumi.getter
    def table(self) -> pulumi.Input[str]:
        """
        Database table name.
        """
        return pulumi.get(self, "table")

    @table.setter
    def table(self, value: pulumi.Input[str]):
        pulumi.set(self, "table", value)


@pulumi.input_type
class AccountPrivilegesViewPrivilegesArgs:
    def __init__(__self__, *,
                 database: pulumi.Input[str],
                 privileges: pulumi.Input[Sequence[pulumi.Input[str]]],
                 view: pulumi.Input[str]):
        """
        :param pulumi.Input[str] database: The name of database.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] privileges: Permission information.
        :param pulumi.Input[str] view: Database view name.
        """
        pulumi.set(__self__, "database", database)
        pulumi.set(__self__, "privileges", privileges)
        pulumi.set(__self__, "view", view)

    @property
    @pulumi.getter
    def database(self) -> pulumi.Input[str]:
        """
        The name of database.
        """
        return pulumi.get(self, "database")

    @database.setter
    def database(self, value: pulumi.Input[str]):
        pulumi.set(self, "database", value)

    @property
    @pulumi.getter
    def privileges(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Permission information.
        """
        return pulumi.get(self, "privileges")

    @privileges.setter
    def privileges(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "privileges", value)

    @property
    @pulumi.getter
    def view(self) -> pulumi.Input[str]:
        """
        Database view name.
        """
        return pulumi.get(self, "view")

    @view.setter
    def view(self, value: pulumi.Input[str]):
        pulumi.set(self, "view", value)


@pulumi.input_type
class DbInstanceInitParamArgs:
    def __init__(__self__, *,
                 param: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] param: The name of parameter.
        :param pulumi.Input[str] value: The value of parameter.
        """
        pulumi.set(__self__, "param", param)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def param(self) -> pulumi.Input[str]:
        """
        The name of parameter.
        """
        return pulumi.get(self, "param")

    @param.setter
    def param(self, value: pulumi.Input[str]):
        pulumi.set(self, "param", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The value of parameter.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class DbInstanceResourceTagArgs:
    def __init__(__self__, *,
                 tag_key: pulumi.Input[str],
                 tag_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] tag_key: The key of tag.
        :param pulumi.Input[str] tag_value: The value of tag.
        """
        pulumi.set(__self__, "tag_key", tag_key)
        pulumi.set(__self__, "tag_value", tag_value)

    @property
    @pulumi.getter(name="tagKey")
    def tag_key(self) -> pulumi.Input[str]:
        """
        The key of tag.
        """
        return pulumi.get(self, "tag_key")

    @tag_key.setter
    def tag_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_key", value)

    @property
    @pulumi.getter(name="tagValue")
    def tag_value(self) -> pulumi.Input[str]:
        """
        The value of tag.
        """
        return pulumi.get(self, "tag_value")

    @tag_value.setter
    def tag_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_value", value)


@pulumi.input_type
class DbParametersParamsArgs:
    def __init__(__self__, *,
                 param: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] param: The name of parameter.
        :param pulumi.Input[str] value: The value of parameter.
        """
        pulumi.set(__self__, "param", param)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def param(self) -> pulumi.Input[str]:
        """
        The name of parameter.
        """
        return pulumi.get(self, "param")

    @param.setter
    def param(self, value: pulumi.Input[str]):
        pulumi.set(self, "param", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        The value of parameter.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class HourdbInstanceResourceTagArgs:
    def __init__(__self__, *,
                 tag_key: pulumi.Input[str],
                 tag_value: pulumi.Input[str]):
        """
        :param pulumi.Input[str] tag_key: tag key.
        :param pulumi.Input[str] tag_value: tag value.
        """
        pulumi.set(__self__, "tag_key", tag_key)
        pulumi.set(__self__, "tag_value", tag_value)

    @property
    @pulumi.getter(name="tagKey")
    def tag_key(self) -> pulumi.Input[str]:
        """
        tag key.
        """
        return pulumi.get(self, "tag_key")

    @tag_key.setter
    def tag_key(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_key", value)

    @property
    @pulumi.getter(name="tagValue")
    def tag_value(self) -> pulumi.Input[str]:
        """
        tag value.
        """
        return pulumi.get(self, "tag_value")

    @tag_value.setter
    def tag_value(self, value: pulumi.Input[str]):
        pulumi.set(self, "tag_value", value)


