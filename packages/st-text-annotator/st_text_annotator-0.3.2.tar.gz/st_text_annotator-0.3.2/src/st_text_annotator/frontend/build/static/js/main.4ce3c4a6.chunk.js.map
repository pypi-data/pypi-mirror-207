{"version":3,"sources":["Annotation.tsx","index.tsx"],"names":["Annotation","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","text","actual_text","annotations","selectedReference","getCharactersCountUntilNode","node","parent","walker","document","createTreeWalker","body","NodeFilter","SHOW_TEXT","charCount","nextNode","_walker$currentNode$t","currentNode","textContent","handleMouseUp","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_document$getSelectio","selection","_document$querySelect13","_document$querySelect14","selectedText","startIndex","endIndex","startAdjustment","endAdjustment","container","charsBeforeStart","charsBeforeEnd","_document$querySelect","_document$querySelect2","_document$querySelect3","_document$querySelect4","_document$querySelect5","_document$querySelect6","_document$querySelect7","_document$querySelect8","_document$querySelect9","_document$querySelect10","_document$querySelect11","_document$querySelect12","re","_this$state","finalStartIndex","finalEndIndex","newAnnotations","wrap","_context","prev","next","getSelection","getRangeAt","toString","trim","startOffset","endOffset","getElementById","startContainer","endContainer","querySelector","charAt","undefined","abrupt","slice","match","isAnnotated","removeAnnotation","setState","push","start","end","label","Streamlit","setComponentValue","renderText","stop","_createClass","key","value","_componentDidMount","_callee2","_this$props$args","_context2","this","props","_this$state2","i","_this$state3","splice","_addReference","_callee3","index","_context3","_selectReference","_callee4","_context4","_x","_removeReference","_callee5","_context5","_x2","_this$state4","_jsx","children","sort","a","b","forEach","annotation","substring","className","_this2","_jsxs","onClick","addReference","map","reference","_reference$","selectReference","xmlns","viewBox","fill","removeReference","fillRule","d","id","onMouseUp","StreamlitComponentBase","withStreamlitConnection","createRoot","render","MyComponent"],"mappings":"6NAoBMA,EAAU,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA8Ib,OA9IaP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACdM,MAAe,CACbC,KAAM,GACNC,YAAa,GACbC,YAAa,GACbC,kBAAmB,GACpBf,EAoDDgB,4BAA8B,SAACC,EAAYC,GAQzC,IAPA,IAAMC,EAASC,SAASC,iBACtBH,GAAUE,SAASE,KACnBC,WAAWC,UACX,MAGEC,EAAY,EACTN,EAAOO,YAAY,CAAC,IAADC,EACxB,GAAIR,EAAOS,cAAgBX,EACzB,MAEFQ,IAA2C,QAA9BE,EAAAR,EAAOS,YAAYC,mBAAW,IAAAF,OAAA,EAA9BA,EAAgCvB,SAAU,CACzD,CAEA,OAAOqB,CACT,EAACzB,EAED8B,cAAaC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAC,EAAA8C,EAAAC,EAAAC,EAAA,OAAA/B,cAAAgC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC0C,KAAlD/B,EAAmC,QAA1BD,EAAGf,SAASgD,sBAAc,IAAAjC,OAAA,EAAvBA,EAAyBkC,WAAW,KAEL,KAAhCjC,EAAUkC,WAAWC,OAAa,CAAAN,EAAAE,KAAA,SAC7C5B,EAAeH,EAAUkC,WAEzB9B,EAAaJ,EAAUoC,YACvB/B,EAAWL,EAAUqC,UACrB/B,EAAkB,EAClBC,EAAgB,EAEdC,EAAYxB,SAASsD,eAAe,eACpC7B,EAAmB7C,EAAKgB,4BAA4BoB,EAAUuC,eAAgB/B,GAC9EE,EAAiB9C,EAAKgB,4BAA4BoB,EAAUwC,aAAchC,GAEhFJ,GAAcK,EACdJ,GAAYK,EAAc,WAE+E,OAA5D,QAAtCC,EAAA3B,SAASyD,cAAc,uBAAe,IAAA9B,GAAa,QAAbC,EAAtCD,EAAwClB,mBAAW,IAAAmB,OAAb,EAAtCA,EAAqD8B,OAAOtC,EAAaE,EAAkB,UAAgHqC,KAA5D,QAAtC9B,EAAA7B,SAASyD,cAAc,uBAAe,IAAA5B,GAAa,QAAbC,EAAtCD,EAAwCpB,mBAAW,IAAAqB,OAAb,EAAtCA,EAAqD4B,OAAOtC,EAAaE,EAAkB,IAAgB,CAAAuB,EAAAE,KAAA,YACnH,MAA5D,QAAtChB,EAAA/B,SAASyD,cAAc,uBAAe,IAAA1B,GAAa,QAAbC,EAAtCD,EAAwCtB,mBAAW,IAAAuB,OAAb,EAAtCA,EAAqD0B,OAAOtC,EAAaE,EAAkB,IAAS,CAAAuB,EAAAE,KAAA,gBAAAF,EAAAe,OAAA,oBAIxGtC,GAAmB,EAACuB,EAAAE,KAAA,oBAG2E,OAApD,QAAtCd,EAAAjC,SAASyD,cAAc,uBAAe,IAAAxB,GAAa,QAAbC,EAAtCD,EAAwCxB,mBAAW,IAAAyB,OAAb,EAAtCA,EAAqDwB,OAAOrC,EAAWE,UAAoHoC,KAApD,QAAtCxB,EAAAnC,SAASyD,cAAc,uBAAe,IAAAtB,GAAa,QAAbC,EAAtCD,EAAwC1B,mBAAW,IAAA2B,OAAb,EAAtCA,EAAqDsB,OAAOrC,EAAWE,IAA4B,CAAAsB,EAAAE,KAAA,YAC3G,MAApD,QAAtCV,EAAArC,SAASyD,cAAc,uBAAe,IAAApB,GAAa,QAAbC,EAAtCD,EAAwC5B,mBAAW,IAAA6B,OAAb,EAAtCA,EAAqDoB,OAAOrC,EAAWE,IAAqB,CAAAsB,EAAAE,KAAA,gBAAAF,EAAAe,OAAA,oBAIhGrC,GAAiB,EAACsB,EAAAE,KAAA,iBAMpB,GAHA5B,GAAqD,QAAtCF,EAAAjB,SAASyD,cAAc,uBAAe,IAAAxC,GAAa,QAAbC,EAAtCD,EAAwCR,mBAAW,IAAAS,OAAb,EAAtCA,EAAqD2C,MAAMzC,EAAaE,EAAiBD,EAAWE,KAAkB,GAGjIA,EAAgB,EAElB,IADMgB,EAAK,6BACJpB,EAAa2C,MAAMvB,IACxBpB,EAAeA,EAAa0C,MAAM,GAAI,GACtCtC,GAAiB,EAWyB,GAT7CiB,EAE0C5D,EAAKW,MAAxCG,EAAW8C,EAAX9C,YAAaC,EAAiB6C,EAAjB7C,kBAEhBD,EAAYC,KACfD,EAAYC,GAAqB,IAG7B8C,EAAkBrB,EAAaE,EAC/BoB,EAAgBrB,EAAWE,GAE7B3C,EAAKmF,YAAYtB,EAAiBC,GAAe,CAADG,EAAAE,KAAA,SAC0B,OAAtEJ,EAAiB/D,EAAKoF,iBAAiBvB,EAAiBC,GAAcG,EAAAE,KAAA,GACtEnE,EAAKqF,SAAS,CAAEvE,YAAaiD,IAAiB,QAAAE,EAAAE,KAAA,iBAEoD,OAAxGrD,EAAYC,GAAmBuE,KAAK,CAAEC,MAAO1B,EAAiB2B,IAAK1B,EAAe2B,MAAOlD,IAAe0B,EAAAE,KAAA,GAClGnE,EAAKqF,SAAS,CAAEvE,gBAAc,QAGtC4E,IAAUC,kBAAkB7E,GAAY,QAG1Cd,EAAKqF,SAAS,CAAExE,YAAab,EAAK4F,eAAe,yBAAA3B,EAAA4B,OAAA,GAAA3D,EAAA,KAClDlC,CAAA,CAyGA,OAzGA8F,YAAAnG,EAAA,EAAAoG,IAAA,oBAAAC,MAAA,eAAAC,EAAAlE,YAAAC,cAAAC,MAtID,SAAAiE,IAAA,IAAAC,EAAAvF,EAAAE,EAAA,OAAAkB,cAAAgC,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OAC2B,OAD3BgC,EACgCE,KAAKC,MAAMjG,KAAjCO,EAAIuF,EAAJvF,KAAME,EAAWqF,EAAXrF,YAAWsF,EAAAjC,KAAA,EAEnBkC,KAAKhB,SAAS,CAAEzE,OAAME,gBAAc,cAAAsF,EAAAjC,KAAA,EACpCkC,KAAKhB,SAAS,CAAExE,YAAawF,KAAKT,eAAe,OACvDF,IAAUC,kBAAkB7E,GAAY,wBAAAsF,EAAAP,OAAA,GAAAK,EAAA,UACzC,yBAAAD,EAAAxF,MAAA,KAAAN,UAAA,EAgIA,IAhIA,CAAA4F,IAAA,cAAAC,MAED,SAAYT,EAAeC,GACzB,IAAAe,EAA2CF,KAAK1F,MAAxCG,EAAWyF,EAAXzF,YAAaC,EAAiBwF,EAAjBxF,kBAErB,IAAKD,EAAYC,GACf,OAAO,EAGT,IAAK,IAAIyF,EAAI,EAAGA,EAAI1F,EAAYC,GAAmBX,OAAQoG,IACzD,GACGjB,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC7FD,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC7FD,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,EAAM1E,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC9ID,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASA,EAAQzE,EAAYC,GAAmByF,GAAGhB,KAAOA,GAAO1E,EAAYC,GAAmByF,GAAGhB,IAE/I,OAAO,EAGX,OAAO,CACT,GAAC,CAAAO,IAAA,mBAAAC,MAED,SAAiBT,EAAeC,GAG9B,IAFA,IAAAiB,EAA2CJ,KAAK1F,MAAxCG,EAAW2F,EAAX3F,YAAaC,EAAiB0F,EAAjB1F,kBAEZyF,EAAI,EAAGA,EAAI1F,EAAYC,GAAmBX,OAAQoG,IACzD,GACGjB,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC7FD,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC7FD,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASC,EAAM1E,EAAYC,GAAmByF,GAAGjB,OAASC,GAAO1E,EAAYC,GAAmByF,GAAGhB,KAC9ID,GAASzE,EAAYC,GAAmByF,GAAGjB,OAASA,EAAQzE,EAAYC,GAAmByF,GAAGhB,KAAOA,GAAO1E,EAAYC,GAAmByF,GAAGhB,IAC7I,CACF1E,EAAYC,GAAmB2F,OAAOF,EAAG,GACzC,KACF,CAOF,OAJ8C,IAA1C1F,EAAYC,GAAmBX,QACjCU,EAAY4F,OAAO3F,EAAmB,GAGjCD,CACT,GAAC,CAAAiF,IAAA,eAAAC,MAAA,eAAAW,EAAA5E,YAAAC,cAAAC,MAwFD,SAAA2E,IAAA,IAAA9F,EAAA+F,EAAA,OAAA7E,cAAAgC,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAGE,KAFQrD,EAAgBuF,KAAK1F,MAArBG,aAGQuF,KAAK1F,MAAMI,oBAA2E,IAArDD,EAAYuF,KAAK1F,MAAMI,mBAAmBX,OAAY,CAAA0G,EAAA3C,KAAA,eAAA2C,EAAA9B,OAAA,iBAQtG,OAJK6B,EAAQ/F,EAAYV,OAAS,EAE9BU,EAAY+F,KACf/F,EAAY+F,GAAS,IACtBC,EAAA3C,KAAA,EAEKkC,KAAKhB,SAAS,CAClBtE,kBAAmB8F,EACnB/F,gBACA,OAEFuF,KAAKhB,SAAS,CAAExE,YAAawF,KAAKT,eAAe,wBAAAkB,EAAAjB,OAAA,GAAAe,EAAA,UAClD,yBAAAD,EAAAlG,MAAA,KAAAN,UAAA,EA5GA,IA4GA,CAAA4F,IAAA,kBAAAC,MAAA,eAAAe,EAAAhF,YAAAC,cAAAC,MAED,SAAA+E,EAAsBH,GAAa,OAAA7E,cAAAgC,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,UAC7BkC,KAAK1F,MAAMI,oBAAsB8F,GAAUR,KAAK1F,MAAMG,YAAY+F,GAAM,CAAAI,EAAA9C,KAAA,eAAA8C,EAAAjC,OAAA,wBAAAiC,EAAA9C,KAAA,EAItEkC,KAAKhB,SAAS,CAAEtE,kBAAmB8F,IAAQ,OACjDR,KAAKhB,SAAS,CAAExE,YAAawF,KAAKT,eAAe,wBAAAqB,EAAApB,OAAA,GAAAmB,EAAA,UAClD,gBAAAE,GAAA,OAAAH,EAAAtG,MAAA,KAAAN,UAAA,EATA,IASA,CAAA4F,IAAA,kBAAAC,MAAA,eAAAmB,EAAApF,YAAAC,cAAAC,MAED,SAAAmF,EAAsBP,GAAa,IAAA/F,EAAA,OAAAkB,cAAAgC,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAGL,OAFpBrD,EAAgBuF,KAAK1F,MAArBG,aAEI4F,OAAOG,EAAO,GAAEQ,EAAAlD,KAAA,EAEtBkC,KAAKhB,SAAS,CAAEvE,cAAaC,kBAAmB,IAAI,OAC1DsF,KAAKhB,SAAS,CAAExE,YAAawF,KAAKT,eAClCF,IAAUC,kBAAkB7E,GAAY,wBAAAuG,EAAAxB,OAAA,GAAAuB,EAAA,UACzC,gBAAAE,GAAA,OAAAH,EAAA1G,MAAA,KAAAN,UAAA,EAVA,IAUA,CAAA4F,IAAA,aAAAC,MAED,WACE,IAAAuB,EAAiDlB,KAAK1F,MAA9CC,EAAI2G,EAAJ3G,KAAME,EAAWyG,EAAXzG,YAAaC,EAAiBwG,EAAjBxG,kBACrBF,EAA6B,GAEnC,IAAKC,EAAYC,GACf,MAAO,CAACyG,cAAA,QAAAC,SAAO7G,KAIjB,IAAI2E,EAAQ,EAcZ,OAZIzE,EAAYC,GAAmBX,OAAS,GAC1CU,EAAYC,GAAmB2G,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEpC,MAAQqC,EAAErC,KAAK,IAGjEzE,EAAYC,GAAmB8G,SAAQ,SAACC,EAAYjB,GAClDhG,EAAYyE,KAAKkC,cAAA,QAAAC,SAAO7G,EAAKmH,UAAUxC,EAAOuC,EAAWvC,UACzD1E,EAAYyE,KAAKkC,cAAA,QAAMQ,UAAU,sCAAqCP,SAAE7G,EAAKmH,UAAUD,EAAWvC,MAAOuC,EAAWtC,QACpHD,EAAQuC,EAAWtC,GACrB,IACA3E,EAAYyE,KAAKkC,cAAA,QAAAC,SAAO7G,EAAKmH,UAAUxC,EAAO3E,EAAKR,WAG5CS,CACT,GAAC,CAAAkF,IAAA,SAAAC,MAED,WAA2B,IAADiC,EAAA,KACxB,OACEC,eAAA,OAAAT,SAAA,CACES,eAAA,OAAKF,UAAU,0BAAyBP,SAAA,CACtCD,cAAA,OACEQ,UAAU,+JACVG,QAAU,kBAAMF,EAAKG,cAAc,EAAEX,SAErCD,cAAA,QAAAC,SAAM,UAEPpB,KAAK1F,MAAMG,YAAYuH,KAAI,SAACC,EAAWzB,GAAK,IAAA0B,EAAA,OAC3CL,eAAA,QAEEF,UAAW,2IAA6IC,EAAKtH,MAAMI,oBAAsB8F,EAAQ,6BAA+B,8BAChOsB,QAAS,WAAQF,EAAKO,gBAAgB3B,EAAO,EAAEY,SAAA,CAElC,QAFkCc,EAE9CD,EAAU,UAAE,IAAAC,OAAA,EAAZA,EAAc9C,MACf+B,cAAA,OACEiB,MAAM,6BACNT,UAAU,mCAAmCU,QAAQ,YACrDC,KAAK,eACLR,QAAS,WAAQF,EAAKW,gBAAgB/B,EAAO,EAAEY,SAE/CD,cAAA,QACEqB,SAAS,UACTC,EAAE,gOAbDjC,EAgBA,OAGXW,cAAA,OAAKuB,GAAG,cAAcf,UAAU,cAAcgB,UAAW3C,KAAKvE,cAAc2F,SACzEpB,KAAK1F,MAAME,gBAIpB,KAAClB,CAAA,CAvPa,CAASsJ,KA2PVC,cAAwBvJ,GC3QjCiD,EAAYxB,SAASsD,eAAe,QAC7ByE,qBAAWvG,GAEnBwG,OAAO5B,cAAC6B,EAAW,I","file":"static/js/main.4ce3c4a6.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React from \"react\"\n\ninterface Reference {\n  start: number,\n  end: number,\n  label: string\n}\n\ninterface State {\n  text: string\n  actual_text: JSX.Element[]\n  selectedReference: number\n  annotations: Reference[][]\n}\n\nclass Annotation extends StreamlitComponentBase<State> {\n  state: State = {\n    text: \"\",\n    actual_text: [],\n    annotations: [],\n    selectedReference: 0\n  }\n\n  async componentDidMount(): Promise<void> {\n    const { text, annotations } = this.props.args\n\n    await this.setState({ text, annotations })\n    await this.setState({ actual_text: this.renderText() })\n    Streamlit.setComponentValue(annotations)\n  }\n\n  isAnnotated(start: number, end: number): boolean {\n    const { annotations, selectedReference } = this.state\n    \n    if (!annotations[selectedReference]) {\n      return false\n    }\n\n    for (let i = 0; i < annotations[selectedReference].length; i++) {\n      if (\n        (start >= annotations[selectedReference][i].start && end <= annotations[selectedReference][i].end) ||\n        (start <= annotations[selectedReference][i].start && end >= annotations[selectedReference][i].end) ||\n        (start <= annotations[selectedReference][i].start && end > annotations[selectedReference][i].start && end <= annotations[selectedReference][i].end) ||\n        (start >= annotations[selectedReference][i].start && start < annotations[selectedReference][i].end && end >= annotations[selectedReference][i].end)\n        ) {\n        return true\n      }\n    }\n    return false\n  }\n\n  removeAnnotation(start: number, end: number): Reference[][] {\n    const { annotations, selectedReference } = this.state\n\n    for (let i = 0; i < annotations[selectedReference].length; i++) {\n      if (\n        (start >= annotations[selectedReference][i].start && end <= annotations[selectedReference][i].end) ||\n        (start <= annotations[selectedReference][i].start && end >= annotations[selectedReference][i].end) ||\n        (start <= annotations[selectedReference][i].start && end > annotations[selectedReference][i].start && end <= annotations[selectedReference][i].end) ||\n        (start >= annotations[selectedReference][i].start && start < annotations[selectedReference][i].end && end >= annotations[selectedReference][i].end)\n        ) {\n        annotations[selectedReference].splice(i, 1)\n        break\n      }\n    }\n\n    if (annotations[selectedReference].length === 0) {\n      annotations.splice(selectedReference, 1)\n    }\n\n    return annotations\n  }\n\n  getCharactersCountUntilNode = (node: Node, parent: HTMLElement | null) => {\n    const walker = document.createTreeWalker(\n      parent || document.body,\n      NodeFilter.SHOW_TEXT,\n      null,\n    );\n    \n    let charCount = 0;\n    while (walker.nextNode()) {\n      if (walker.currentNode === node) {\n        break;\n      }\n      charCount += walker.currentNode.textContent?.length || 0;\n    }\n\n    return charCount;\n  }\n\n  handleMouseUp = async () => {\n    const selection = document.getSelection()?.getRangeAt(0)\n\n    if (selection && selection.toString().trim() !== \"\") {\n      let selectedText = selection.toString()\n\n      let startIndex = selection.startOffset\n      let endIndex = selection.endOffset\n      let startAdjustment = 0\n      let endAdjustment = 0\n\n      const container = document.getElementById(\"actual-text\")\n      const charsBeforeStart = this.getCharactersCountUntilNode(selection.startContainer, container);\n      const charsBeforeEnd = this.getCharactersCountUntilNode(selection.endContainer, container);\n\n      startIndex += charsBeforeStart\n      endIndex += charsBeforeEnd\n\n      while (document.querySelector(\"#actual-text\")?.textContent?.charAt(startIndex + startAdjustment - 1) !== \" \" && document.querySelector(\"#actual-text\")?.textContent?.charAt(startIndex + startAdjustment - 1) !== undefined) {\n        if (document.querySelector(\"#actual-text\")?.textContent?.charAt(startIndex + startAdjustment - 1) === '') {\n          break\n        }\n\n        startAdjustment -= 1\n      }\n\n      while (document.querySelector(\"#actual-text\")?.textContent?.charAt(endIndex + endAdjustment) !== \" \" && document.querySelector(\"#actual-text\")?.textContent?.charAt(endIndex + endAdjustment) !== undefined) {\n        if (document.querySelector(\"#actual-text\")?.textContent?.charAt(endIndex + endAdjustment) === '') {\n          break\n        }\n\n        endAdjustment += 1\n      }\n\n      selectedText = document.querySelector(\"#actual-text\")?.textContent?.slice(startIndex + startAdjustment, endIndex + endAdjustment) || \"\"\n\n      // remove commas, periods, etc. from the end of the selection if end adjustment is superior to 0\n      if (endAdjustment > 0) {\n        const re = /[.,/#!$%^&*;:{}=\\-_`~()]$/g\n        while (selectedText.match(re)) {\n          selectedText = selectedText.slice(0, -1)\n          endAdjustment -= 1\n        }\n      }\n\n      const { annotations, selectedReference } = this.state\n\n      if (!annotations[selectedReference]) {\n        annotations[selectedReference] = []\n      }\n\n      const finalStartIndex = startIndex + startAdjustment\n      const finalEndIndex = endIndex + endAdjustment\n\n      if (this.isAnnotated(finalStartIndex, finalEndIndex)) {\n        const newAnnotations = this.removeAnnotation(finalStartIndex, finalEndIndex)\n        await this.setState({ annotations: newAnnotations })\n      } else {\n        annotations[selectedReference].push({ start: finalStartIndex, end: finalEndIndex, label: selectedText })\n        await this.setState({ annotations })\n      }\n\n      Streamlit.setComponentValue(annotations)\n    }\n\n    this.setState({ actual_text: this.renderText() })\n  }\n\n  async addReference(): Promise<void> {\n    const { annotations } = this.state\n\n    // if selected annotation is empty do not add a new one\n    if (annotations[this.state.selectedReference] && annotations[this.state.selectedReference].length === 0) {\n      return\n    }\n\n    const index = annotations.length + 1\n    \n    if (!annotations[index]) {\n      annotations[index] = []\n    }\n\n    await this.setState({ \n      selectedReference: index,\n      annotations\n    })\n\n    this.setState({ actual_text: this.renderText() })\n  }\n\n  async selectReference(index: number): Promise<void> {\n    if (this.state.selectedReference === index || !this.state.annotations[index]) {\n      return\n    }\n\n    await this.setState({ selectedReference: index })\n    this.setState({ actual_text: this.renderText() })\n  }\n\n  async removeReference(index: number): Promise<void> {\n    const { annotations } = this.state\n\n    annotations.splice(index, 1)\n\n    await this.setState({ annotations, selectedReference: 0 })\n    this.setState({ actual_text: this.renderText() })\n    Streamlit.setComponentValue(annotations)\n  }\n\n  renderText(): JSX.Element[] {\n    const { text, annotations, selectedReference } = this.state\n    const actual_text: JSX.Element[] = []\n\n    if (!annotations[selectedReference]) {\n      return [<span>{text}</span>]\n    }\n\n\n    let start = 0\n\n    if (annotations[selectedReference].length > 0) {\n      annotations[selectedReference].sort((a, b) => a.start - b.start)\n    }\n\n    annotations[selectedReference].forEach((annotation, index) => {\n      actual_text.push(<span>{text.substring(start, annotation.start)}</span>)\n      actual_text.push(<span className=\"annotated bg-blue-500 text-gray-100\">{text.substring(annotation.start, annotation.end)}</span>)\n      start = annotation.end\n    })\n    actual_text.push(<span>{text.substring(start, text.length)}</span>)\n\n\n    return actual_text\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        <div className=\"flex flex-row flex-wrap\">\n          <div\n            className=\"flex flex-wrap px-4 py-2 m-1 justify-between items-center text-sm font-medium cursor-pointer hover:bg-blue-600 hover:text-gray-100 bg-blue-500 text-gray-100\"\n            onClick={ () => this.addReference() }\n            >\n            <span>Add</span>\n          </div>\n          {this.state.annotations.map((reference, index) => (\n            <span\n              key={index}\n              className={\"flex flex-wrap pl-4 pr-2 py-2 m-1 justify-between items-center text-sm font-medium cursor-pointer hover:bg-blue-600 hover:text-gray-100\" + (this.state.selectedReference === index ? \" bg-blue-500 text-gray-100\" : \" bg-blue-900 text-gray-200\")}\n              onClick={() => { this.selectReference(index) }}\n            >\n              {reference[0]?.label}\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5 ml-3 hover:text-gray-300\" viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                onClick={() => { this.removeReference(index) }}\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                />\n              </svg>\n            </span>\n          ))}\n        </div>\n        <div id=\"actual-text\" className=\"mt-5 h-full\" onMouseUp={this.handleMouseUp}>\n          {this.state.actual_text}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default withStreamlitConnection(Annotation)\n\n","import { createRoot } from 'react-dom/client';\nimport MyComponent from \"./Annotation\"\nimport React from 'react';\n\nconst container = document.getElementById(\"root\")\nconst root = createRoot(container)\n\nroot.render(<MyComponent />)\n"],"sourceRoot":""}