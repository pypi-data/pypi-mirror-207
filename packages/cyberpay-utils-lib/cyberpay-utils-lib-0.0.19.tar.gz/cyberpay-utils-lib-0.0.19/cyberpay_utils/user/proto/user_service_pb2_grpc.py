# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cyberpay_utils.user.proto import user_service_pb2 as cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthUser = channel.unary_unary(
                '/user_service.proto.UserService/AuthUser',
                request_serializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserRequest.SerializeToString,
                response_deserializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserResponse.FromString,
                )
        self.GetUserById = channel.unary_unary(
                '/user_service.proto.UserService/GetUserById',
                request_serializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdRequest.SerializeToString,
                response_deserializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdResponse.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthUser,
                    request_deserializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserRequest.FromString,
                    response_serializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserResponse.SerializeToString,
            ),
            'GetUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserById,
                    request_deserializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdRequest.FromString,
                    response_serializer=cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_service.proto.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.proto.UserService/AuthUser',
            cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserRequest.SerializeToString,
            cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.AuthUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_service.proto.UserService/GetUserById',
            cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdRequest.SerializeToString,
            cyberpay__utils_dot_user_dot_proto_dot_user__service__pb2.GetUserByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
