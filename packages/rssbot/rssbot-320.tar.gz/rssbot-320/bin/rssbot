#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C,I,R,E0611,E0402


__author__ = "B.H.J. Thate <thatebhj@gmail.com>"
__version__ = 1


import getpass
import pwd
import os
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from rssbot.clients import Client
from rssbot.command import command
from rssbot.errored import Errors
from rssbot.loggers import Logging
from rssbot.message import parse
from rssbot.objects import update
from rssbot.scanner import scanpkg, importer, starter, threader
from rssbot.runtime import Cfg, date
from rssbot.threads import launch


import rssbot.modules


def cprint(txt):
    if "v" in Cfg.opts:
        print(txt)
        sys.stdout.flush()


class CLI(Client):

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    def handle(self, evt):
        CLI.handle(self, evt)
        evt.wait()

    def poll(self):
        return self.event(input("> "))


def banner():
    cprint(f"{Cfg.name.upper()} started at {date}")
    

def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open('/dev/null', 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open('/dev/null', 'a+')
    ses = open('/dev/null', 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def main():
    cfg = parse(' '.join(sys.argv[1:]))
    update(Cfg, cfg)
    if "v" in Cfg.opts:
        banner()
    scanpkg(rssbot.modules, importer, doall=True)
    Logging.raw = cprint
    dowait = False
    if cfg.txt:
        cli = CLI()
        command(cli, Cfg.otxt)
    elif 'd' in Cfg.opts:
        daemon()
        dowait = True
    elif 'c' in Cfg.opts:
        banner()
        csl = Console()
        csl.start()
        dowait = True
    if dowait:
        for mod in scanpkg(rssbot.modules, threader, doall=True):
            thr = getattr(mod, "_thr", None)
            if thr:
                thr.join()
        while 1:
            time.sleep(1.0)
            waiter()


def privileges(username):
    try:
        pwnam = pwd.getpwnam(username)
    except KeyError:
        username = getpass.getuser()
        try:
            pwnam = pwd.getpwnam(username)
        except KeyError:
            return username
    if os.getuid() != 0:
        return username
    os.setgroups([])
    os.setgid(pwnam.pw_gid)
    os.setuid(pwnam.pw_uid)
    return username


def waiter():
    got = []
    for ex in Errors.errors:
        if not Cfg.silent:
            traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Errors.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print('')
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


if __name__ == "__main__":
    wrap(main)
