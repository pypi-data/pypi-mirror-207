# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 0.49.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from synctera_client import schemas  # noqa: F401


class RelationshipTypes(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The relationship type. One of the following:
* `BENEFICIAL_OWNER_OF` – a person who directly or indirectly owns a portion of the business.
* `MANAGING_PERSON_OF` – a person who is an officer, director, or other notable person of an organization.
* `OWNER_OF` – a business with ownership of another business.
* `PAYER_PAYEE` - a person or business with a payer payee relationship with another person or business

    """


    class MetaOapg:
        format = 'enum'
        enum_value_to_name = {
            "BENEFICIAL_OWNER_OF": "BENEFICIAL_OWNER_OF",
            "MANAGING_PERSON_OF": "MANAGING_PERSON_OF",
            "OWNER_OF": "OWNER_OF",
            "PAYER_PAYEE": "PAYER_PAYEE",
        }
    
    @schemas.classproperty
    def BENEFICIAL_OWNER_OF(cls):
        return cls("BENEFICIAL_OWNER_OF")
    
    @schemas.classproperty
    def MANAGING_PERSON_OF(cls):
        return cls("MANAGING_PERSON_OF")
    
    @schemas.classproperty
    def OWNER_OF(cls):
        return cls("OWNER_OF")
    
    @schemas.classproperty
    def PAYER_PAYEE(cls):
        return cls("PAYER_PAYEE")
