{%- if production.event.repository -%}
{%- assign repo_dir = production.event.repository.directory -%}
{%- else -%}
{%- assign repo_dir = "." -%}
{%- endif -%}
{%- assign meta = production.meta -%}
{%- assign sampler = production.meta['sampler'] -%}
{%- assign scheduler = production.meta['scheduler'] -%}
{%- assign likelihood = production.meta['likelihood'] -%}
{%- assign priors = production.meta['priors'] -%}
{%- assign data = production.meta['data'] -%}
{%- assign quality = production.meta['quality'] -%}
{%- assign ifos = production.meta['interferometers'] -%}
################################################################################
## Calibration arguments
################################################################################

calibration-model=CubicSpline
spline-calibration-envelope-dict={ {% for ifo in ifos %}{{ifo}}:{{data['calibration'][ifo]}},{% endfor %} }
spline-calibration-nodes=10
spline-calibration-amplitude-uncertainty-dict=None
spline-calibration-phase-uncertainty-dict=None

################################################################################
## Data generation arguments
################################################################################

ignore-gwpy-data-quality-check=True
gps-tuple=None
gps-file=None
timeslide-file=None
timeslide-dict=None
trigger-time={{ production.meta['event time'] }}
gaussian-noise=False
n-simulation=0
data-dict={ {% if data['data files'].size > 0 %} {% for ifo in ifos %}{{ifo}}:{{data['data files'][ifo]}},{% endfor %} {% endif %} }
data-format=None
channel-dict={ {% for ifo in ifos %}{{ifo}}:{{data['channels'][ifo]}},{% endfor %} }

################################################################################
## Detector arguments
################################################################################

coherence-test=False
detectors={{ ifos }}
duration={{ data['segment length'] }}
generation-seed=None
psd-dict={ {% for ifo in ifos %}{{ifo}}:{{production.psds[ifo]}},{% endfor %} }
psd-fractional-overlap=0.5
post-trigger-duration=2.0
sampling-frequency={{ likelihood['sample rate'] | round }}
psd-length={{ likelihood['psd length'] | round }}
psd-maximum-duration=1024
psd-method=median
psd-start-time=None
minimum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['minimum frequency'][ifo]}},{% endfor %} }
maximum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['maximum frequency'][ifo]}},{% endfor %} }
zero-noise=False
tukey-roll-off=0.4
resampling-method=lal

################################################################################
## Injection arguments
################################################################################

injection=False
injection-dict=None
injection-file=None
injection-numbers=None
injection-waveform-approximant=None

################################################################################
## Job submission arguments
################################################################################

accounting={{ scheduler['accounting group'] }}
accounting_user = {{ config['condor']['user'] }}
label={{ production.name }}
local=False
local-generation={{ scheduler['local generation'] | default: False }}
local-plot=False
outdir={{ production.rundir }}
periodic-restart-time={{ scheduler['periodic restart time'] | default: 28800 }}
request-memory={{ scheduler['request memory'] | default: 8.0}}
request-memory-generation=None
request-cpus={{ scheduler['request cpus'] | default: 16}}
scheduler={{ scheduler['type'] | default: "condor" }}
scheduler-args=None
scheduler-module=None
scheduler-env=None
transfer-files=True
log-directory=None
online-pe=False
osg={{ scheduler['osg'] | default: False }}
desired-sites={{ scheduler['desired sites'] | default: None }}

################################################################################
## Likelihood arguments
################################################################################

distance-marginalization={{ likelihood['marginalization']['distance'] | default: "False" }}
{% assign lookup_default = repo_dir+"/C01_offline/"+production.name+".TD.npz" -%}
distance-marginalization-lookup-table={{ likelihood['marginalization']['distance lookup'] | default: lookup_default }}
phase-marginalization={{ likelihood['marginalization']['phase'] | default: "False" }}
time-marginalization={{ likelihood['marginalization']['time'] | default: "True" }}
jitter-time=True
reference-frame={% if production.meta['interferometers'] contains "H1" %}H1{% endif %}{% if production.meta['interferometers'] contains "L1" %}L1{% endif %}{% if production.meta['interferometers'] contains "V1" %}V1{% endif %}
time-reference=geocent
likelihood-type={{ likelihood['type'] | default: "GravitationalWaveTransient" }}

{% if likelihood contains "roq" %}
roq-folder={{ likelihood['roq']['folder'] | default: "None" }}
roq-scale-factor={{ likelihood['roq']['scale'] | default: 1 }}
{% endif %}

extra-likelihood-kwargs={{ likelihood['kwargs'] | default: "None" }}

################################################################################
## Output arguments
################################################################################

plot-calibration=False
plot-corner=False
plot-marginal=False
plot-skymap=False
plot-waveform=False
plot-format=png
create-summary=True
email=None
existing-dir=None
webdir={{ config['general']['webroot'] }}/{{ production.event.name }}/{{ production.name }}
summarypages-arguments=None
result-format=hdf5
final-result=True
final-result-nsamples=20000

################################################################################
## Prior arguments
################################################################################

default-prior = {{ priors['default'] | default: "bilby_tgr.fti.prior.BBHPriorDict" }}
deltaT=0.2
prior-dict={
chirp_mass = {{priors['chirp mass']['type'] | default: "bilby.gw.prior.UniformInComponentsChirpMass" }}(name='chirp_mass', minimum={{priors['chirp mass']['minimum']}}, maximum={{priors['chirp mass']['maximum']}}, unit='$M_{Sun}$'),
mass_ratio = {{priors['mass ratio']['type'] | default: "bilby.gw.prior.UniformInComponentsMassRatio" }}(name='mass_ratio', minimum={{priors['mass ratio']['minimum']}}, maximum={{priors['mass ratio']['maximum']}}),
mass_1 = {{priors['mass 1']['type'] | default: Constraint}}(name='mass_1', minimum={{priors['mass 1']['minimum']}}, maximum={{priors['mass 1']['maximum']}}),
mass_2 = {{priors['mass 2']['type'] | default: Constraint}}(name='mass_2', minimum={{priors['mass 2']['minimum']}}, maximum={{priors['mass 2']['maximum']}}),
chi_1 = {{ priors['chi 1']['type'] | default: "bilby.gw.prior.AlignedSpin"}}(name='chi_1', {% if priors['chi 1']['type'] == "bilby.gw.prior.AlignedSpin" %} a_prior=Uniform(minimum={{ priors['chi 1']['minimum'] | default: 0}}, maximum={{ priors['chi 1']['maximum'] | default: 0.99}}) {% else %} minimum={{ priors['chi 1']['minimum'] | default: 0}}, maximum={{ priors['chi 1']['maximum'] | default: 0.99}} {% endif %} ),
chi_2 = {{ priors['chi 2']['type'] | default: "bilby.gw.prior.AlignedSpin"}}(name='chi_2', {% if priors['chi 2']['type'] == "bilby.gw.prior.AlignedSpin" %} a_prior=Uniform(minimum={{ priors['chi 2']['minimum'] | default: 0}}, maximum={{ priors['chi 2']['maximum'] | default: 0.99}}) {% else %} minimum={{ priors['chi 2']['minimum'] | default: 0}}, maximum={{ priors['chi 2']['maximum'] | default: 0.99}} {% endif %} ),
luminosity_distance = {{ priors['luminosity distance']['type'] | default: PowerLaw}}({% for key in priors['luminosity distance'].keys() %}{% if key != "type" %}{{key | replace: " ", "_"}}={{priors['luminosity distance'][key]}},{% endif %} {% endfor %} unit='Mpc'),
dec = Cosine(name='dec'),
ra = Uniform(name='ra', minimum=0, maximum=2 * np.pi, boundary='periodic'), theta_jn: Sine(name='theta_jn'),
psi = Uniform(name='psi', minimum=0, maximum=np.pi, boundary='periodic'),
phase = Uniform(name='phase', minimum=0, maximum=2 * np.pi, boundary='periodic'),
dchi_Minus2 = {{priors['dchi m2']['type'] | default: DeltaFunction}}(name='dchi_Minus2', {% if priors['dchi m2']['type'] == "DeltaFunction" %} peak={{priors['dchi 0']['peak'] | default: 0}} {% else %} minimum={{priors['dchi m2']['minimum']}}, maximum={{priors['dchi m2']['maximum']}} {% endif %} ),
dchi_0 = {{priors['dchi 0']['type'] | default: DeltaFunction}}(name='dchi_0', {% if priors['dchi 0']['type'] == "DeltaFunction" %} peak={{priors['dchi 0']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 0']['minimum']}}, maximum={{priors['dchi 0']['maximum']}} {% endif %} ),
dchi_1 = {{priors['dchi 1']['type'] | default: DeltaFunction}}(name='dchi_1', {% if priors['dchi 1']['type'] == "DeltaFunction" %} peak={{priors['dchi 1']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 1']['minimum']}}, maximum={{priors['dchi 1']['maximum']}} {% endif %} ),
dchi_2 = {{priors['dchi 2']['type'] | default: DeltaFunction}}(name='dchi_2', {% if priors['dchi 2']['type'] == "DeltaFunction" %} peak={{priors['dchi 2']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 2']['minimum']}}, maximum={{priors['dchi 2']['maximum']}} {% endif %} ),
dchi_3 = {{priors['dchi 3']['type'] | default: DeltaFunction}}(name='dchi_3', {% if priors['dchi 3']['type'] == "DeltaFunction" %} peak={{priors['dchi 3']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 3']['minimum']}}, maximum={{priors['dchi 3']['maximum']}} {% endif %} ),
dchi_3S = {{priors['dchi 3S']['type'] | default: DeltaFunction}}(name='dchi_3S', {% if priors['dchi 3S']['type'] == "DeltaFunction" %} peak={{priors['dchi 3S']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 3S']['minimum']}}, maximum={{priors['dchi 3S']['maximum']}} {% endif %} ),
dchi_3NS = {{priors['dchi 3NS']['type'] | default: DeltaFunction}}(name='dchi_3NS', {% if priors['dchi 3NS']['type'] == "DeltaFunction" %} peak={{priors['dchi 3NS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 3NS']['minimum']}}, maximum={{priors['dchi 3NS']['maximum']}} {% endif %} ),
dchi_4 = {{priors['dchi 4']['type'] | default: DeltaFunction}}(name='dchi_4', {% if priors['dchi 4']['type'] == "DeltaFunction" %} peak={{priors['dchi 4']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 4']['minimum']}}, maximum={{priors['dchi 4']['maximum']}} {% endif %} ),
dchi_4S = {{priors['dchi 4S']['type'] | default: DeltaFunction}}(name='dchi_4S', {% if priors['dchi 4S']['type'] == "DeltaFunction" %} peak={{priors['dchi 4S']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 4S']['minimum']}}, maximum={{priors['dchi 4S']['maximum']}} {% endif %} ),
dchi_4NS = {{priors['dchi 4NS']['type'] | default: DeltaFunction}}(name='dchi_4NS', {% if priors['dchi 4NS']['type'] == "DeltaFunction" %} peak={{priors['dchi 4NS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 4NS']['minimum']}}, maximum={{priors['dchi 4NS']['maximum']}} {% endif %} ),
dchi_5l = {{priors['dchi 5l']['type'] | default: DeltaFunction}}(name='dchi_5l', {% if priors['dchi 5l']['type'] == "DeltaFunction" %} peak={{priors['dchi 5l']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 5l']['minimum']}}, maximum={{priors['dchi 5l']['maximum']}} {% endif %} ),
dchi_5lS = {{priors['dchi 5lS']['type'] | default: DeltaFunction}}(name='dchi_5lS', {% if priors['dchi 5lS']['type'] == "DeltaFunction" %} peak={{priors['dchi 5lS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 5lS']['minimum']}}, maximum={{priors['dchi 5lS']['maximum']}} {% endif %} ),
dchi_5lNS = {{priors['dchi 5lNS']['type'] | default: DeltaFunction}}(name='dchi_5lNS', {% if priors['dchi 5lNS']['type'] == "DeltaFunction" %} peak={{priors['dchi 5lNS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 5lNS']['minimum']}}, maximum={{priors['dchi 5lNS']['maximum']}} {% endif %} ),
dchi_6 = {{priors['dchi 6']['type'] | default: DeltaFunction}}(name='dchi_6', {% if priors['dchi 6']['type'] == "DeltaFunction" %} peak={{priors['dchi 6']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 6']['minimum']}}, maximum={{priors['dchi 6']['maximum']}} {% endif %} ),
dchi_6S = {{priors['dchi 6S']['type'] | default: DeltaFunction}}(name='dchi_6S', {% if priors['dchi 6S']['type'] == "DeltaFunction" %} peak={{priors['dchi 6S']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 6S']['minimum']}}, maximum={{priors['dchi 6S']['maximum']}} {% endif %} ),
dchi_6NS = {{priors['dchi 6NS']['type'] | default: DeltaFunction}}(name='dchi_6NS', {% if priors['dchi 6NS']['type'] == "DeltaFunction" %} peak={{priors['dchi 6NS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 6NS']['minimum']}}, maximum={{priors['dchi 6NS']['maximum']}} {% endif %} ),
dchi_6l = {{priors['dchi 6l']['type'] | default: DeltaFunction}}(name='dchi_6l', {% if priors['dchi 6l']['type'] == "DeltaFunction" %} peak={{priors['dchi 6l']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 6l']['minimum']}}, maximum={{priors['dchi 6l']['maximum']}} {% endif %} ),
dchi_7 = {{priors['dchi 7']['type'] | default: DeltaFunction}}(name='dchi_7', {% if priors['dchi 7']['type'] == "DeltaFunction" %} peak={{priors['dchi 7']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 7']['minimum']}}, maximum={{priors['dchi 7']['maximum']}} {% endif %} ),
dchi_7S = {{priors['dchi 7S']['type'] | default: DeltaFunction}}(name='dchi_7S', {% if priors['dchi 7S']['type'] == "DeltaFunction" %} peak={{priors['dchi 7S']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 7S']['minimum']}}, maximum={{priors['dchi 7S']['maximum']}} {% endif %} ),
dchi_7NS = {{priors['dchi 7NS']['type'] | default: DeltaFunction}}(name='dchi_7NS', {% if priors['dchi 7NS']['type'] == "DeltaFunction" %} peak={{priors['dchi 7NS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi 7NS']['minimum']}}, maximum={{priors['dchi 7NS']['maximum']}} {% endif %} ),
dchi_kappaS = {{priors['dchi kappaS']['type'] | default: DeltaFunction}}(name='dchi_kappaS', {% if priors['dchi kappaS']['type'] == "DeltaFunction" %} peak={{priors['dchi kappaS']['peak'] | default: 0}} {% else %} minimum={{priors['dchi kappaS']['minimum']}}, maximum={{priors['dchi kappaS']['maximum']}} {% endif %} ),
dchi_kappaA = {{priors['dchi kappaA']['type'] | default: DeltaFunction}}(name='dchi_kappaA', {% if priors['dchi kappaA']['type'] == "DeltaFunction" %} peak={{priors['dchi kappaA']['peak'] | default: 0}} {% else %} minimum={{priors['dchi kappaA']['minimum']}}, maximum={{priors['dchi kappaA']['maximum']}} {% endif %} ),
f_window_div_f_peak = {{priors['f_window_div_f_peak']['type'] | default: DeltaFunction}}(name='f_window_div_f_peak', peak={{ priors['f_window_div_f_peak']['peak'] | default: 1.0}} ),
NumCycles = {{priors['NumCycles']['type'] | default: DeltaFunction}}(name='NumCycles', peak={{ priors['NumCycles']['peak'] | default: 1}} )}
enforce-signal-duration=True

################################################################################
## Post processing arguments
################################################################################

postprocessing-executable=None
postprocessing-arguments=None
single-postprocessing-executable=None
single-postprocessing-arguments=None

################################################################################
## Sampler arguments
################################################################################

sampler={{sampler['sampler'] | default: "dynesty" }}
sampling-seed={{sampler['seed'] | default: None }}
n-parallel={{ sampler['parallel jobs'] | default: 4 }}
sampler-kwargs={{ sampler['sampler kwargs'] |  default: "{'nlive': 2000, 'sample': 'rwalk', 'walks': 100, 'nact': 50, 'check_point_delta_t':1800, 'check_point_plot':True}"  }} 

################################################################################
## Waveform arguments
################################################################################

waveform-generator={{ production.meta['waveform']['generator'] | default: "bilby.gw.waveform_generator.WaveformGenerator" }}
reference-frequency={{ production.meta['waveform']['reference frequency'] }}
waveform-approximant={{ production.meta['waveform']['approximant'] }}
catch-waveform-errors=True
pn-spin-order={{ production.meta['waveform']['pn spin order'] | default: -1 }}
pn-tidal-order={{ production.meta['waveform']['pn tidal order'] | default: -1 }}
pn-phase-order={{ production.meta['waveform']['pn phase order'] | default: -1 }}
pn-amplitude-order={{ production.meta['waveform']['pn amplitude order'] | default: 1 }}
numerical-relativity-file={{ production.meta['waveform']['file'] | default: "None" }}
waveform-arguments-dict={{ production.meta['waveform']['arguments'] | default: "None" }}
mode-array={{ production.meta['waveform']['mode array'] | default: "None" }}
frequency-domain-source-model={{ production.meta['likelihood']['frequency domain source model'] | default: "bilby_tgr.fti.source.lal_binary_black_hole" }}
conversion-function={{ production.meta['waveform']['conversion function'] | default: "bilby_tgr.fti.conversion.convert_to_lal_binary_black_hole_parameters" }}
generation-function={{ production.meta['waveform']['generation function'] | default: "bilby_tgr.fti.conversion.generate_all_bbh_parameters" }}