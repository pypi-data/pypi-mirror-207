#!python
# This file is placed in the Public Domain.
# pylint: disable=C,I,R,E0611,E0402,W0212


__author__ = "B.H.J. Thate <thatebhj@gmail.com>"
__version__ = 1


import os
import sys
import termios
import traceback


from operbot.clients import Client
from operbot.command import command
from operbot.errored import Errors
from operbot.message import parse
from operbot.objects import update
from operbot.persist import Persist
from operbot.scanner import scandir, scanpkg, importer
from operbot.runtime import Cfg


import operbot.modules


Persist.workdir = "/var/lib/operbot/"


def cprint(txt):
    print(txt)
    sys.stdout.flush()


class CLI(Client):

    def announce(self, txt):
        pass

    def raw(self, txt):
        cprint(txt)


def main():
    if "INVOCATION_ID" not in os.environ:
        print("not a systemd")
        os._exit(0)
    cfg = parse(' '.join(sys.argv[1:]))
    update(Cfg, cfg)
    scanpkg(operbot.modules, importer, doall=True)
    scandir("mod", importer, doall=True)
    cli = CLI()
    evt = command(cli, Cfg.otxt)
    evt.wait()


def waiter():
    got = []
    for ex in Errors.errors:
        if not Cfg.silent:
            traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Errors.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print('')
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


if __name__ == "__main__":
    wrap(main)
