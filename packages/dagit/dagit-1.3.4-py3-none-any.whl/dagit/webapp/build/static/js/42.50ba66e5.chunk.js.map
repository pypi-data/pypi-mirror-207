{"version":3,"file":"static/js/42.50ba66e5.chunk.js","mappings":"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","sources":["../../core/src/app/FallthroughRoot.tsx","../../ui/src/components/NonIdealState.tsx"],"sourcesContent":["import {Box, Colors, ExternalAnchorButton, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {DagsterRepoOption, WorkspaceContext} from '../workspace/WorkspaceContext';\nimport {workspacePath, workspacePipelinePath} from '../workspace/workspacePath';\n\nexport const FallthroughRoot = () => {\n  return (\n    <Switch>\n      <Route path=\"*\">\n        <FinalRedirectOrLoadingRoot />\n      </Route>\n    </Switch>\n  );\n};\n\nconst getVisibleJobs = (r: DagsterRepoOption) =>\n  r.repository.pipelines.filter((j) => !isHiddenAssetGroupJob(j.name));\n\nconst FinalRedirectOrLoadingRoot = () => {\n  const workspaceContext = React.useContext(WorkspaceContext);\n  const {allRepos, loading, locationEntries} = workspaceContext;\n\n  if (loading) {\n    return (\n      <Box flex={{direction: 'row', justifyContent: 'center'}} style={{paddingTop: '100px'}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 16}}>\n          <Spinner purpose=\"section\" />\n          <div style={{color: Colors.Gray600}}>Loading definitionsâ€¦</div>\n        </Box>\n      </Box>\n    );\n  }\n\n  // If we have location entries but no repos, we have no useful objects to show.\n  // Redirect to Workspace overview to surface relevant errors to the user.\n  if (locationEntries.length && allRepos.length === 0) {\n    return <Redirect to=\"/locations\" />;\n  }\n\n  const reposWithVisibleJobs = allRepos.filter((r) => getVisibleJobs(r).length > 0);\n\n  // If we have no repos with jobs, see if we have an asset group and route to it.\n  if (reposWithVisibleJobs.length === 0) {\n    const repoWithAssetGroup = allRepos.find((r) => r.repository.assetGroups.length);\n    if (repoWithAssetGroup) {\n      return (\n        <Redirect\n          to={workspacePath(\n            repoWithAssetGroup.repository.name,\n            repoWithAssetGroup.repositoryLocation.name,\n            `/asset-groups/${repoWithAssetGroup.repository.assetGroups[0].groupName}`,\n          )}\n        />\n      );\n    }\n  }\n\n  // If we have exactly one repo with one job, route to the job overview\n  if (reposWithVisibleJobs.length === 1 && getVisibleJobs(reposWithVisibleJobs[0]).length === 1) {\n    const repo = reposWithVisibleJobs[0];\n    const job = getVisibleJobs(repo)[0];\n    return (\n      <Redirect\n        to={workspacePipelinePath({\n          repoName: repo.repository.name,\n          repoLocation: repo.repositoryLocation.name,\n          pipelineName: job.name,\n          isJob: job.isJob,\n        })}\n      />\n    );\n  }\n\n  // If we have more than one repo with a job, route to the instance overview\n  if (reposWithVisibleJobs.length > 0) {\n    return <Redirect to=\"/overview\" />;\n  }\n\n  const repoWithNoJob = allRepos[0];\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState\n        icon=\"no-results\"\n        title={repoWithNoJob ? 'No jobs' : 'No definitions'}\n        description={\n          repoWithNoJob\n            ? 'Your definitions are loaded, but no jobs were found.'\n            : 'Add a job to get started.'\n        }\n        action={\n          <ExternalAnchorButton href=\"https://docs.dagster.io/getting-started\">\n            View documentation\n          </ExternalAnchorButton>\n        }\n      />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default FallthroughRoot;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["FallthroughRoot","_jsx","Switch","children","Route","path","FinalRedirectOrLoadingRoot","getVisibleJobs","r","repository","pipelines","filter","j","isHiddenAssetGroupJob","name","workspaceContext","React","WorkspaceContext","allRepos","loading","locationEntries","Box","flex","direction","justifyContent","style","paddingTop","_jsxs","alignItems","gap","Spinner","purpose","color","Colors","length","Redirect","to","reposWithVisibleJobs","repoWithAssetGroup","find","assetGroups","workspacePath","repositoryLocation","concat","groupName","repo","job","workspacePipelinePath","repoName","repoLocation","pipelineName","isJob","repoWithNoJob","padding","vertical","NonIdealState","icon","title","description","action","ExternalAnchorButton","href","_ref","shrinkable","singleContentElement","Boolean","background","margin","borderRadius","width","maxWidth","Icon","size","Subheading"],"sourceRoot":""}