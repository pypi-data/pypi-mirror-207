{"version":3,"sources":["../node_modules/is-observable/index.js","../node_modules/threads/dist/serializers.js","../node_modules/threads/dist/common.js","../node_modules/threads/dist/symbols.js","../node_modules/threads/dist/transferable.js","../node_modules/threads/dist/types/messages.js","../node_modules/threads/dist/worker/implementation.browser.js","../node_modules/process/browser.js","../node_modules/threads/dist/worker/index.js","../node_modules/threads/worker.js","../src/pyodide/badges.ts","../src/pyodide/webWorker.ts"],"names":["module","exports","value","Symbol","observable","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","checkIfBadgeEarned","badges","result","userCode","gameState","userPythonCode","replace","badgesPerWorksheet","id","worksheetID","trigger","badge1Trigger","badge2Trigger","badge3Trigger","badge","badgeWorksheetPair","includes","action","action_type","JSON","stringify","options","direction","x","y","substrings","codeContainsKeywords","every","substring","pyodide","getAvatarStateFromGameState","playerAvatarID","players","find","player","initializePyodide","importScripts","loadPyodide","loadPackage","runPythonAsync","self","location","origin","computeNextAction","gamePaused","avatarState","Promise","resolve","log","turnCount","error","simplifyErrorMessageInLog","toString","regexToFindNextTurnErrors","matches","match","simpleError","split","slice","join","updateAvatarCode","setAvatarCodeToWaitActionOnError","pyodideWorker","filterByWorksheet"],"mappings":"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","file":"webWorker.384093de.js","sourceRoot":"../../../game_frontend/public","sourcesContent":["'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","module.exports = require(\"./dist/worker/index\")\n","/* eslint-env worker */\nimport ComputedTurnResult from './computedTurnResult'\n\nexport function checkIfBadgeEarned(\n  badges: string,\n  result: ComputedTurnResult,\n  userCode: string,\n  gameState: any\n): string {\n  const userPythonCode = userCode.replace(/\\s*#.*/gm, '') // Remove all comment lines from the user's code\n  const badgesPerWorksheet = [\n    { id: 1, worksheetID: 1, trigger: badge1Trigger(result) },\n    { id: 2, worksheetID: 1, trigger: badge2Trigger(result, userPythonCode) },\n    {\n      id: 3,\n      worksheetID: 1,\n      trigger: badge3Trigger(result, userPythonCode),\n    },\n  ]\n\n  for (const badge of badgesPerWorksheet) {\n    const badgeWorksheetPair = `${badge.worksheetID}:${badge.id}`\n    if (\n      !badges.includes(badgeWorksheetPair) &&\n      badge.worksheetID === gameState.worksheetID &&\n      badge.trigger\n    ) {\n      // Here is when a new badge is earned\n      // TODO on worksheet 2: This might have to order the badges, in case user does not do the worksheet in order\n      badges += `${badgeWorksheetPair},`\n    }\n  }\n  return badges\n}\n\nfunction badge1Trigger(result: any): boolean {\n  // Check the code returns a move action other than NORTH\n  return (\n    result.action.action_type === 'move' &&\n    JSON.stringify(result.action.options.direction) !== JSON.stringify({ x: 0, y: 1 })\n  )\n}\n\nfunction badge2Trigger(result: any, userPythonCode: string): boolean {\n  // Check code contains keywords to move in random directions\n  const substrings = [\n    'import random',\n    'randint(',\n    'direction.NORTH',\n    'direction.EAST',\n    'direction.SOUTH',\n    'direction.WEST',\n    'if ',\n    'elif ',\n    'else:',\n  ]\n  // Check the code contains certain keywords about moving in a random direction\n  const codeContainsKeywords = substrings.every((substring) => userPythonCode.includes(substring))\n\n  // And check it returns a move action\n  return result.action.action_type === 'move' && codeContainsKeywords\n}\n\nfunction badge3Trigger(result: any, userPythonCode: string): boolean {\n  // Check the code contains certain keywords about moving to a cell\n  const substrings = ['world_state.can_move_to(', 'print(', 'if ']\n  const codeContainsKeywords = substrings.every((substring) => userPythonCode.includes(substring))\n\n  // And check it returns a move action\n  return result.action.action_type === 'move' && codeContainsKeywords\n}\n","/* eslint-env worker */\nimport { expose } from 'threads/worker'\nimport { checkIfBadgeEarned, filterByWorksheet } from './badges'\nimport ComputedTurnResult from './computedTurnResult'\n\nlet pyodide: Pyodide\n\nfunction getAvatarStateFromGameState(gameState: any, playerAvatarID: number): object {\n  return gameState.players.find((player) => player.id === playerAvatarID)\n}\n\nasync function initializePyodide() {\n  importScripts('https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js')\n  pyodide = await loadPyodide()\n  await pyodide.loadPackage(['micropip'])\n  await pyodide.runPythonAsync(`\nimport micropip\n\nmicropip.install(\"${self.location.origin}/static/worker/aimmo_game_worker-0.0.0-py3-none-any.whl\")\n  `)\n\n  await pyodide.runPythonAsync(`\nimport contextlib\nimport sys\n\nfrom js import Object\nfrom io import StringIO\nfrom pyodide import to_js\n\nfrom simulation import direction, location\nfrom simulation.action import MoveAction, PickupAction, WaitAction, MoveTowardsAction, DropAction\nfrom simulation.avatar_state import create_avatar_state\nfrom simulation.world_map import WorldMapCreator\n\n\n@contextlib.contextmanager\ndef capture_output(stdout=None, stderr=None):\n  \"\"\"Temporarily switches stdout and stderr to stringIO objects or variable.\"\"\"\n  old_out = sys.stdout\n  old_err = sys.stderr\n\n  if stdout is None:\n      stdout = StringIO()\n  if stderr is None:\n      stderr = StringIO()\n  sys.stdout = stdout\n  sys.stderr = stderr\n  yield stdout, stderr\n\n  sys.stdout = old_out\n  sys.stderr = old_err\n`)\n}\n\nexport async function computeNextAction(gameState, playerAvatarID, gamePaused): Promise<ComputedTurnResult> {\n  const avatarState = getAvatarStateFromGameState(gameState, playerAvatarID)\n  if (gamePaused) {\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: '',\n      turnCount: gameState.turnCount + 1,\n    })\n  }\n\n  try {\n    return await pyodide.runPythonAsync(`\ngame_state = ${JSON.stringify(gameState)}\nworld_map = WorldMapCreator.generate_world_map_from_game_state(game_state)\navatar_state = create_avatar_state(${JSON.stringify(avatarState)})\nserialized_action = {\"action_type\": \"wait\"}\nwith capture_output() as output:\n    action = next_turn(world_map, avatar_state)\n    if action is None:\n        raise Exception(\"Make sure you are returning an action\")\n    serialized_action = action.serialise()\nstdout, stderr = output\nlogs = stdout.getvalue() + stderr.getvalue()\nto_js({\"action\": serialized_action, \"log\": logs, \"turnCount\": game_state[\"turnCount\"] + 1}, dict_converter=Object.fromEntries)\n    `)\n  } catch (error) {\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: simplifyErrorMessageInLog(error.toString()),\n      turnCount: gameState.turnCount + 1,\n    })\n  }\n}\n\nexport function simplifyErrorMessageInLog(log: string): string {\n  const regexToFindNextTurnErrors = /.*line (\\d+), in next_turn\\n((?:.|\\n)*)/\n  const matches = log.match(regexToFindNextTurnErrors)\n  if (matches?.length >= 2) {\n    // get only the exception message line, removing potential traceback\n    const simpleError = matches[2].split('\\n').slice(-2).join('')\n    return `Uh oh! Something isn't correct on line ${matches[1]}. Here's the error we got:\\n${simpleError}`\n  }\n  // error not in next_turn function\n  return log.split('\\n').slice(-2).join('\\n')\n}\n\nexport async function updateAvatarCode(\n  userCode: string,\n  gameState: any,\n  playerAvatarID: number = 0\n): Promise<ComputedTurnResult> {\n  let turnCount = 0\n  if (gameState) {\n    turnCount = gameState.turnCount + 1\n  }\n\n  try {\n    await pyodide.runPythonAsync(userCode)\n    if (gameState) {\n      return computeNextAction(gameState, playerAvatarID, false)\n    }\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: '',\n      turnCount: turnCount,\n    })\n  } catch (error) {\n    await setAvatarCodeToWaitActionOnError()\n    return Promise.resolve({\n      action: { action_type: 'wait' },\n      log: simplifyErrorMessageInLog(error.toString()),\n      turnCount: turnCount,\n    })\n  }\n}\n\nasync function setAvatarCodeToWaitActionOnError() {\n  await pyodide.runPythonAsync(\n    `def next_turn(world_map, avatar_state):\n    return WaitAction()`\n  )\n}\n\nconst pyodideWorker = {\n  initializePyodide,\n  computeNextAction,\n  updateAvatarCode,\n  checkIfBadgeEarned,\n  filterByWorksheet,\n}\n\nexport type PyodideWorker = typeof pyodideWorker\n\nexpose(pyodideWorker)\n"]}