# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tink/proto/aes_gcm_hkdf_streaming.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tink.proto import common_pb2 as tink_dot_proto_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'tink/proto/aes_gcm_hkdf_streaming.proto\x12\x12google.crypto.tink\x1a\x17tink/proto/common.proto\"\x8c\x01\n\x19\x41\x65sGcmHkdfStreamingParams\x12\x1f\n\x17\x63iphertext_segment_size\x18\x01 \x01(\r\x12\x18\n\x10\x64\x65rived_key_size\x18\x02 \x01(\r\x12\x34\n\x0ehkdf_hash_type\x18\x03 \x01(\x0e\x32\x1c.google.crypto.tink.HashType\"\x80\x01\n\x1c\x41\x65sGcmHkdfStreamingKeyFormat\x12\x0f\n\x07version\x18\x03 \x01(\r\x12=\n\x06params\x18\x01 \x01(\x0b\x32-.google.crypto.tink.AesGcmHkdfStreamingParams\x12\x10\n\x08key_size\x18\x02 \x01(\r\"{\n\x16\x41\x65sGcmHkdfStreamingKey\x12\x0f\n\x07version\x18\x01 \x01(\r\x12=\n\x06params\x18\x02 \x01(\x0b\x32-.google.crypto.tink.AesGcmHkdfStreamingParams\x12\x11\n\tkey_value\x18\x03 \x01(\x0c\x42^\n\x1c\x63om.google.crypto.tink.protoP\x01Z<github.com/google/tink/proto/aes_gcm_hkdf_streaming_go_protob\x06proto3')



_AESGCMHKDFSTREAMINGPARAMS = DESCRIPTOR.message_types_by_name['AesGcmHkdfStreamingParams']
_AESGCMHKDFSTREAMINGKEYFORMAT = DESCRIPTOR.message_types_by_name['AesGcmHkdfStreamingKeyFormat']
_AESGCMHKDFSTREAMINGKEY = DESCRIPTOR.message_types_by_name['AesGcmHkdfStreamingKey']
AesGcmHkdfStreamingParams = _reflection.GeneratedProtocolMessageType('AesGcmHkdfStreamingParams', (_message.Message,), {
  'DESCRIPTOR' : _AESGCMHKDFSTREAMINGPARAMS,
  '__module__' : 'tink.proto.aes_gcm_hkdf_streaming_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.AesGcmHkdfStreamingParams)
  })
_sym_db.RegisterMessage(AesGcmHkdfStreamingParams)

AesGcmHkdfStreamingKeyFormat = _reflection.GeneratedProtocolMessageType('AesGcmHkdfStreamingKeyFormat', (_message.Message,), {
  'DESCRIPTOR' : _AESGCMHKDFSTREAMINGKEYFORMAT,
  '__module__' : 'tink.proto.aes_gcm_hkdf_streaming_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.AesGcmHkdfStreamingKeyFormat)
  })
_sym_db.RegisterMessage(AesGcmHkdfStreamingKeyFormat)

AesGcmHkdfStreamingKey = _reflection.GeneratedProtocolMessageType('AesGcmHkdfStreamingKey', (_message.Message,), {
  'DESCRIPTOR' : _AESGCMHKDFSTREAMINGKEY,
  '__module__' : 'tink.proto.aes_gcm_hkdf_streaming_pb2'
  # @@protoc_insertion_point(class_scope:google.crypto.tink.AesGcmHkdfStreamingKey)
  })
_sym_db.RegisterMessage(AesGcmHkdfStreamingKey)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.google.crypto.tink.protoP\001Z<github.com/google/tink/proto/aes_gcm_hkdf_streaming_go_proto'
  _AESGCMHKDFSTREAMINGPARAMS._serialized_start=89
  _AESGCMHKDFSTREAMINGPARAMS._serialized_end=229
  _AESGCMHKDFSTREAMINGKEYFORMAT._serialized_start=232
  _AESGCMHKDFSTREAMINGKEYFORMAT._serialized_end=360
  _AESGCMHKDFSTREAMINGKEY._serialized_start=362
  _AESGCMHKDFSTREAMINGKEY._serialized_end=485
# @@protoc_insertion_point(module_scope)
