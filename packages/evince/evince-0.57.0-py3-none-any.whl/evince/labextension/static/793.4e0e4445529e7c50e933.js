"use strict";(self.webpackChunkevince=self.webpackChunkevince||[]).push([[793],{763:(e,t,n)=>{n.r(t),n.d(t,{BraketModel:()=>d,BraketView:()=>l,DenseModel:()=>z,DenseView:()=>F,FashionModel:()=>A,FashionView:()=>B,LatticeModel:()=>y,LatticeView:()=>M,MDModel:()=>f,MDView:()=>b,MorpheusModel:()=>E,MorpheusView:()=>V,PointModel:()=>S,PointView:()=>P,SpotlightModel:()=>v,SpotlightView:()=>w,TemplateModel:()=>_,TemplateView:()=>x,version:()=>R.i8});var s=n(672),o=n(960),r=n(47),a=n(146);class d extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"BraketModel",_view_name:"BraketView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class l extends s.DOMWidgetView{render(){const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,t.position.z=5;const n=new o.WebGLRenderer;this.renderer=n,this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6);const i=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(i,1),this.renderer.antialias=!0,this.model.get("vr_button")&&(this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.xr.enabled=!0),new r.z(this.camera,this.renderer.domElement),window.addEventListener("resize",(function(){console.log("window_resize"),t.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),t.updateProjectionMatrix(),n.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth)})),this.init_changed(),this.el.append(this.renderer.domElement),this.ao_changed(),this.model.on("change:init",this.init_changed,this),this.model.on("change:ao",this.ao_changed,this),n.setAnimationLoop((function(){for(let t=0;t<e.children.length;t++)performance.now(),e.children[t].material.uniforms.time.value+=.01;n.render(e,t)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors")}pos_changed(){this.pos=this.model.get("pos");for(let e=0;e<this.pos.length;e++){let t=this.pos[e],n=this.scene.children[e];n.position.x=t[0],n.position.y=t[1],n.position.z=t[2]}}surf_changed(){this.surf=this.model.get("surf");for(let e=0;e<this.surf.length;e++){let e=new o.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new o.Vector2}},vertexShader:"uniform float time;\n            uniform vec2 resolution;\n            varying vec2 vUv;\n            varying vec3 pos;\n            varying vec3 tex;\n\n            void main() {\n                vUv = uv;\n                pos = vec3(position.x, position.y, position.z);\n                tex = vec3(position.x+time, position.y, position.z);\n                //pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n            }",fragmentShader:"uniform vec3 user_color;\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\nvarying float q;\n\nvoid main() {\n\nvec2 p = vUv;\nfloat q = tex[0]*tex[0] + tex[1]*tex[1] + tex[2]*tex[2];\n\n    gl_FragColor = gl_FragColor + .01*vec4(.5 + 1.7369481664870148*sqrt(15)*pow(3.141592653589793, -0.75)*tex[2]*(pow(tex[0], 2) - pow(tex[1], 2))*exp(-pow(tex[0], 2) - pow(tex[1], 2) - pow(tex[2], 2)), 0.2, 0.5, 0.5);\n}",side:o.DoubleSide,blending:o.SubtractiveBlending});e.depthWrite=!1;let t=new o.BufferGeometry;t.setIndex(this.surf[1]),t.setAttribute("position",new o.Float32BufferAttribute(this.surf[0],3)),new o.Mesh(t,e)}}ao_changed(){this.ao=this.model.get("ao"),this.surface_view=this.model.get("surface_view");var e=this.model.get("fragment_shader");if(this.surface_view){var t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let n=new o.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new o.Vector2}},vertexShader:t,fragmentShader:e,side:o.DoubleSide,blending:o.SubtractiveBlending});n.depthWrite=!1,this.model.get("additive")&&(n.blending=o.AdditiveBlending);let i=new o.PlaneGeometry(1e4,1e4),s=new o.Mesh(i,n);s.position.x=0,s.position.y=0,s.position.z=0,this.scene.add(s)}else{t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let n=new o.SphereBufferGeometry(1),i=(new o.InstancedBufferGeometry).copy(n),s=this.model.get("n_concentric");console.log("number of concetric spheres:",s),i.maxInstancedCount=s;let r=[],a=[];for(let e=0;e<s;e++)a.push(0,0,0),r.push(2*(e/s)**1.5+3-1,0,0);let d=new Float32Array(a);i.setAttribute("aCurve",new o.InstancedBufferAttribute(d,3,!1));let l=new Float32Array(r);i.setAttribute("aRadius",new o.InstancedBufferAttribute(l,3,!1)),this.instancedGeometry=i;let h=new o.ShaderMaterial({fragmentShader:e,vertexShader:"// Define the attributes\nvarying vec3 vColor;\nvarying vec3 tex;\nvarying vec2 vUv;\n\nattribute vec3 aRadius;\nattribute vec3 aCurve;\n\nvoid main(){\n//vec3 transformed = position*aRadius.x*length(cameraPosition);\nvec3 transformed = position*aRadius.x*length(cameraPosition); //n\n//vec3 transformed = position*aRadius.x*length(modelViewMatrix[3])*2.0; \n\n//tex = vec3(transformed.x, transformed.y, transformed.z) + cameraPosition; // + 3.0*cameraPosition; \ntex = vec3(transformed.x, transformed.y, transformed.z) + 3.0*cameraPosition; //n\n\n// 3. Get position and add it to the final position\n//vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\n//transformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(tex, 1.0);\n\n//vColor = aColor;\n//vPis = gl_position;\n}",uniforms:{time:{value:0},resolution:{value:new o.Vector2}},side:o.BackSide,blending:o.SubtractiveBlending});this.model.get("additive")&&(h.blending=o.AdditiveBlending),h.depthWrite=!1;let c=new o.InstancedMesh(i,h,s);c.instanceMatrix.needsUpdate=!0,this.scene.add(c)}}}var h=n(804),c=n(426),m=n(335),u=n(721),g=(n(546),n(441)),p=n(980);class v extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"SpotlightModel",_view_name:"SpotlightView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class w extends s.DOMWidgetView{render(){const e=new o.Scene,t={};this.scene=e;let n=new o.PerspectiveCamera(50,document.activeElement.clientWidth/(.65*document.activeElement.clientWidth),.1,1e3);this.camera=n,this.camera.position.z=5;const s=new o.WebGLRenderer;s.setPixelRatio(window.devicePixelRatio),this.renderer=s,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(this.model.get("window_scale")*document.activeElement.clientWidth,this.model.get("window_scale")*document.activeElement.clientWidth*.65);const d=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(d,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let l=new r.z(this.camera,this.renderer.domElement);this.controls=l,this.init_changed(),this.el.append(this.renderer.domElement),this.el.appendChild(a.N.createButton(s)),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this);const v=new c.C(this.scene,this.camera),w=new h.xC(this.renderer);if(w.addPass(v),this.model.get("sao")){console.log("sao active");const e=new m.F(this.scene,this.camera,!0,!0);e.params.saoScale=this.model.get("saoScale"),e.params.saoBias=this.model.get("saoBias"),e.params.saoIntensity=this.model.get("saoIntensity"),console.log("sao render pass",e.renderToScreen),w.addPass(e)}if(this.model.get("dof")){console.log("dof active");const e=new u.A(this.scene,this.camera,{focus:this.model.get("focus"),aperture:this.model.get("aperture"),maxblur:this.model.get("max_blur"),width:this.model.get("window_scale")*document.activeElement.clientWidth,height:this.model.get("window_scale")*document.activeElement.clientWidth*.65});console.log("dof render pass",e.renderToScreen),e.needsSwap=!0,w.addPass(e),t.bokeh=e}if(this.model.get("fxaa")){console.log("fxaa active");const e=new p.T(g.C),t=s.getPixelRatio();e.uniforms.resolution.value.set(1/(this.model.get("window_scale")*t*document.activeElement.clientWidth),1/(this.model.get("window_scale")*t*document.activeElement.clientWidth*.65)),e.renderToScreen=!1,console.log("fxaa render pass",e.renderToScreen),w.addPass(e)}t.composer=w,this.renderer.autoClear=!1;var f=this;window.addEventListener("resize",(function(){console.log("window_resize"),n.aspect=document.activeElement.clientWidth/(.65*document.activeElement.clientWidth),n.updateProjectionMatrix(),f.renderer.setSize(f.model.get("window_scale")*document.activeElement.clientWidth,f.model.get("window_scale")*document.activeElement.clientWidth*.65)})),s.setAnimationLoop((function(){t.composer.render(),f.pos=f.model.get("pos"),new o.Matrix4;let e=[];if(f.box.length>2){for(let e=0;e<f.pos.length;e++)f.scene.children[0].children[e].position.set(f.pos[e][0],f.pos[e][1],f.pos[e][2]);for(let e=0;e<f.bonds.length;e++){let t=f.pos[f.bonds[e][0]],i=f.pos[f.bonds[e][1]],r=new o.Vector3(t[0],t[1],t[2]),a=new o.Vector3(i[0],i[1],i[2]);var n=(new o.Vector3).subVectors(a,r),s=f.scene.children[1].children[e];s.scale.z=n.length(),s.position.x=.5*(i[0]+t[0]),s.position.y=.5*(i[1]+t[1]),s.position.z=.5*(i[2]+t[2]),s.lookAt(a)}}if(2==f.box.length){for(let t=0;t<f.pos.length;t++)e.push(f.pos[t][0],f.pos[t][1]);let t=new Float32Array(e);f.scene.children[0].children[i].geometry.setAttribute("aCurve",new o.InstancedBufferAttribute(t,2,!1))}}))}init_changed(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.bonds=this.model.get("bonds"),this.radius=this.model.get("radius");const e=new o.Group,t=new o.Group;for(let t=0;t<this.pos.length;t++){let n=new o.SphereBufferGeometry(this.radius[t],30,20);n.attributes.position.needsUpdate=!0;let i=new o.MeshStandardMaterial;i.color=new o.Color(this.colors[t][0],this.colors[t][1],this.colors[t][2]),i.roughness=.2,i.metalness=.2,this.model.get("transparent_bubbles")&&(i.opacity=.2,i.transparent=!0);let s=new o.Mesh(n,i);s.position.set(this.pos[t][0],this.pos[t][1],this.pos[t][2]),s.updateMatrix(),e.add(s)}this.scene.add(e);for(let e=0;e<this.bonds.length;e++){let r=this.pos[this.bonds[e][0]],a=this.pos[this.bonds[e][1]],d=new o.Vector3(r[0],r[1],r[2]),l=new o.Vector3(a[0],a[1],a[2]);var n=(new o.Vector3).subVectors(l,d);let h=new o.MeshStandardMaterial({color:2829099});h.roughness=.2,h.metalness=.2;var i=new o.CylinderGeometry(.4,.4,1,6,4,!0);i.applyMatrix4((new o.Matrix4).makeRotationX(1.57075));var s=new o.Mesh(i,h);s.scale.z=n.length(),s.position.x=.5*(a[0]+r[0]),s.position.y=.5*(a[1]+r[1]),s.position.z=.5*(a[2]+r[2]),s.lookAt(l),t.add(s)}this.scene.add(t);let r=new o.AmbientLight(16777215,.8);this.scene.add(r);const a=new o.DirectionalLight(16777215,.5);a.position.set(1,1,1),this.scene.add(a)}remove_atom(){gonners=this.model.get("atoms_for_deletion");for(let e=0;e<gonners.length;e++){this.scene.children[0].children[gonners[e]].remove();for(let t=0;t<this.bonds.length;t++)this.bonds[t][0]==gonners[e]&&this.scene.children[1].children[t].remove(),this.bonds[t][1]==gonners[e]&&this.scene.children[1].children[t].remove()}}pos_changed(){this.pos=this.model.get("pos"),new o.Matrix4}}class f extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"MDModel",_view_name:"MDView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class b extends s.DOMWidgetView{render(){super.render();const e=new o.Scene;this.scene=e;let t=new o.Raycaster;this.raycaster=t;const n=new o.Vector2(1,1);this.mouse=n,this.selectedObject=null;let i=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=i,this.camera.position.z=5,this.camera.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),this.camera.updateProjectionMatrix();const s=new o.WebGLRenderer;s.setPixelRatio(window.devicePixelRatio),this.renderer=s,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth);const d=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(d,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let l=new r.z(this.camera,this.renderer.domElement);this.controls=l,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.colors_changed(),this.radius_changed(),this.count_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:colors",this.colors_changed,this),this.model.on("change:radius",this.radius_changed,this),this.model.on("change:count",this.count_changed,this),this.model.on("change:fragment_shader",this.fragment_shader_changed,this),this.model.on("change:init",this.init_changed,this),s.setAnimationLoop((function(){s.render(e,i)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.radius=this.model.get("radius"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.count=this.model.get("count"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new o.SphereBufferGeometry(.3),t=(new o.InstancedBufferGeometry).copy(e),n=this.model.get("max_instances");t.maxInstancedCount=n;let i=[],s=[];if(2==this.box.length){for(let e=0;e<n;e++)s.push(this.pos[e][0],this.pos[e][1]),i.push(this.colors[e][0],this.colors[e][1],this.colors[e][2]);let e=new Float32Array(s);t.setAttribute("aCurve",new o.InstancedBufferAttribute(e,2,!1));var r="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\n\nvoid main(){\nvec3 transformed = position;\n\n// 2. Extract values from attribute\n//float aRadius = aCurve.x;\n\n\n// 3. Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor;\n//vPis = gl_position;\n}"}if(3==this.box.length){let e=new Float32Array(this.pos.buffer);t.setAttribute("aCurve",new o.InstancedBufferAttribute(e,3,!1));let n=new Float32Array(this.radius.buffer);t.setAttribute("aRadius",new o.InstancedBufferAttribute(n,1,!1));let i=new Float32Array(this.colors.buffer);t.setAttribute("aColor",new o.InstancedBufferAttribute(i,3,!1)),r="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\nattribute vec4 aCurve;\nattribute float aRadius;\n\nvoid main(){\nvec3 transformed = position*aRadius;\n\n\n// Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor*(.7 + .3*normal[0]);\n}"}this.instancedGeometry=t;var a="varying vec3 vColor;\nvoid main(){\ngl_FragColor = gl_FragColor + vec4(vColor, 1.0);\n}";console.log(this.box.length),console.log(a),console.log(r);let d=new o.ShaderMaterial({fragmentShader:a,vertexShader:r});t.needsUpdate=!0;let l=new o.InstancedMesh(t,d,n);if(l.count=this.model.get("count"),this.scene.add(l),this.box.length>2){if(this.box[0]>0){let e=new o.PlaneGeometry(2*Math.abs(this.box[1]),2*Math.abs(this.box[2])),t=new o.MeshBasicMaterial({color:"rgba(10,10,5)",side:o.BackSide});t.opacity=.2,t.transparent=!0,t.blending=o.SubtractiveBlending,this.model.get("additive")&&(t.blending=o.AdditiveBlending);let n=new o.Mesh(e,t);n.rotation.x=0,n.position.x=this.box[0],n.rotation.y=1.57075,n.rotation.x=1.57075,this.scene.add(n),n=new o.Mesh(e,t),n.rotation.x=0,n.position.x=-this.box[0],n.rotation.y=-1.57075,n.rotation.x=1.57075,this.scene.add(n)}if(this.box[1]>0){let e=new o.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[2])),t=new o.MeshBasicMaterial({color:"rgba(20,20,10)",side:o.BackSide});t.opacity=.2,t.transparent=!0,t.blending=o.SubtractiveBlending,this.model.get("additive")&&(t.blending=o.AdditiveBlending);let n=new o.Mesh(e,t);n.rotation.y=0,n.position.y=-this.box[1],n.rotation.x=1.57075,n.rotation.z=0,this.scene.add(n),n=new o.Mesh(e,t),n.rotation.y=0,n.position.y=this.box[1],n.rotation.x=-1.57075,n.rotation.z=0,this.scene.add(n)}if(this.box[2]>0){let e=new o.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[1])),t=new o.MeshBasicMaterial({color:"rgba(35,35,25)",side:o.BackSide});t.opacity=.2,t.transparent=!0,t.blending=o.SubtractiveBlending,this.model.get("additive")&&(t.blending=o.AdditiveBlending);let n=new o.Mesh(e,t);n.position.z=this.box[2],this.scene.add(n),n=new o.Mesh(e,t),n.rotation.x=3.1415,n.position.z=-this.box[2],this.scene.add(n)}let e=[];e.push(new o.Vector3(this.box[0],this.box[1],this.box[2])),e.push(new o.Vector3(this.box[0],-this.box[1],this.box[2])),e.push(new o.Vector3(-this.box[0],-this.box[1],this.box[2])),e.push(new o.Vector3(-this.box[0],this.box[1],this.box[2])),e.push(new o.Vector3(this.box[0],this.box[1],this.box[2]));let t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367}));this.scene.add(n),e=[],e.push(new o.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new o.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new o.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new o.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new o.Vector3(this.box[0],this.box[1],-this.box[2])),t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367})),this.scene.add(n),e=[],e.push(new o.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new o.Vector3(this.box[0],this.box[1],this.box[2])),t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367})),this.scene.add(n),e=[],e.push(new o.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new o.Vector3(this.box[0],-this.box[1],this.box[2])),t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367})),this.scene.add(n),e=[],e.push(new o.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new o.Vector3(-this.box[0],this.box[1],this.box[2])),t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367})),this.scene.add(n),e=[],e.push(new o.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new o.Vector3(-this.box[0],-this.box[1],this.box[2])),t=(new o.BufferGeometry).setFromPoints(e),n=new o.Line(t,new o.LineBasicMaterial({color:7829367})),this.scene.add(n)}let h=new o.AmbientLight(2105376,5);this.scene.add(h);const c=new o.DirectionalLight(16777215,.5);c.position.set(1,1,1),this.scene.add(c)}count_changed(){this.scene.children[0].count=this.model.get("count")}pos_changed(){this.pos=this.model.get("pos");let e=new Float32Array(this.pos.buffer);this.scene.children[0].geometry.setAttribute("aCurve",new o.InstancedBufferAttribute(e,3,!1))}radius_changed(){let e=new Float32Array(this.model.get("radius").buffer);this.scene.children[0].geometry.setAttribute("aRadius",new o.InstancedBufferAttribute(e,1,!1))}colors_changed(){let e=new Float32Array(this.model.get("colors").buffer);this.scene.children[0].geometry.setAttribute("aColor",new o.InstancedBufferAttribute(e,3,!1))}fragment_shader_changed(){console.log(this.scene.children[0].material),this.fragment_shader=this.model.get("fragment_shader"),this.scene.children[0].material.fragmentShader=this.fragment_shader}}class _ extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"TemplateModel",_view_name:"TemplateView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class x extends s.DOMWidgetView{render(){const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const n=new o.WebGLRenderer;this.renderer=n,n.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0;let i=new r.z(this.camera,this.renderer.domElement);this.controls=i,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);let s=new o.SphereBufferGeometry(1,20,10),a=new o.MeshStandardMaterial;a.roughness=.2,a.metalness=.2;let d=new o.Mesh(s,a);this.scene.add(d),this.value_changed(),this.model.on("change:value",this.value_changed,this),n.setAnimationLoop((function(){n.render(e,t)}))}value_changed(){console.log("value_changed")}}class y extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"LatticeModel",_view_name:"LatticeView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class M extends s.DOMWidgetView{render(){const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const n=new o.WebGLRenderer;n.setPixelRatio(window.devicePixelRatio),this.renderer=n,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setAnimationLoop((function(){n.render(e,t)})),this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let i=new r.z(this.camera,this.renderer.domElement);this.controls=i,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.state_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this),this.model.on("change:state",this.state_changed,this),n.setAnimationLoop((function(){n.render(e,t)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.state=this.model.get("state"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new o.SphereBufferGeometry(.3),t=(new o.InstancedBufferGeometry).copy(e),n=this.state.length;t.maxInstancedCount=n;let i=[];if(2==this.box.length){let e=[];for(let t=0;t<n;t++)e.push(this.state[t],this.state[t]);let r=new Float32Array(e);t.setAttribute("aState",new o.InstancedBufferAttribute(r,2,!1));for(let e=0;e<n;e++)i.push(this.pos[e][0],this.pos[e][1],0);let a=new Float32Array(i);t.setAttribute("aCurve",new o.InstancedBufferAttribute(a,3,!1));var s="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec3 getColor(float stateValue){\n  \n  vec3 pos = vec3(0.);\n  pos.x += cos(.01*stateValue );\n  pos.y += 0.0; // sin(progress *PI*8.) * radius + sin(progress * PI *2.) * 30.;\n  pos.z += 0.0; // progress *200. - 200./2. + offset;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  //vColor = aColor;\n  //vColor = getColor(aState);\n  vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n  //vPis = gl_position;\n}"}if(3==this.box.length){let e=[];for(let t=0;t<n;t++)e.push(this.state[t],this.state[t]);let r=new Float32Array(e);t.setAttribute("aState",new o.InstancedBufferAttribute(r,2,!1));for(let e=0;e<n;e++)i.push(this.pos[e][0],this.pos[e][1],this.pos[e][2]);let a=new Float32Array(i);t.setAttribute("aCurve",new o.InstancedBufferAttribute(a,3,!1)),s="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec4 getColor(vec2 stateValue){\n  \n  vec4 pos = vec4(0.3);\n  pos.x = .5*(1.0 + cos(6.0*stateValue.x));\n  pos.y = .5*(1.0 + sin(stateValue.x)); // (1.0+sin(stateValue *3.14*8.0);\n  pos.z = .5*(1.0 + cos(24.0*stateValue.x + 0.5));\n  //pos.z += .5*(1.0+cos(3.14*stateValue +.5);\n  pos.w = stateValue.y;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  vColor = getColor(aState);\n  //vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n\n}"}let r=new Float32Array([]);t.setAttribute("aColor",new o.InstancedBufferAttribute(r,3,!1)),this.instancedGeometry=t;let a=new o.ShaderMaterial({fragmentShader:"varying vec4 vColor;\nvoid main(){\n  gl_FragColor = gl_FragColor + .5*vColor; //vec4(vColor, 1.0);\n}",vertexShader:s,blending:o.AdditiveBlending});a.depthWrite=!1,a.side=o.FrontSide;let d=new o.InstancedMesh(t,a,n);d.instanceMatrix.needsUpdate=!0,this.scene.add(d);let l=new o.AmbientLight(2105376,5);this.scene.add(l);const h=new o.DirectionalLight(16777215,.5);h.position.set(1,1,1),this.scene.add(h)}pos_changed(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new o.Matrix4,[]);if(this.box.length>2){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1],this.pos[n][2]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new o.InstancedBufferAttribute(n,3,!1))}if(2==this.box.length){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new o.InstancedBufferAttribute(n,2,!1))}}state_changed(){this.state=this.model.get("state");let e=this.scene.children[0],t=(new o.Matrix4,[]);for(let n=0;n<e.count;n++)t.push(this.state[n],this.state[n]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aState",new o.InstancedBufferAttribute(n,2,!1))}}var C=n(841);class A extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"FashionModel",_view_name:"FashionView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class B extends s.DOMWidgetView{render(){super.render();const e=new o.Scene,t={};this.scene=e;let n=[],i=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=i,this.camera.position.z=5,this.camera.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),this.camera.updateProjectionMatrix();const s=new o.WebGLRenderer;s.setPixelRatio(window.devicePixelRatio),this.renderer=s,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth);const d=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(d,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let l=new r.z(this.camera,this.renderer.domElement);this.controls=l,this.init_changed(),this.el.append(this.renderer.domElement),this.el.appendChild(a.N.createButton(s)),this._pos_changed(),this._bonds_changed(),this.listenTo(this.model,"change:pos",this._pos_changed,this),this.listenTo(this.model,"change:bonds",this._bonds_changed,this),this.model.on("change:init",this.init_changed,this);const v=new c.C(this.scene,this.camera),w=new h.xC(this.renderer);w.addPass(v);let f=new o.Raycaster,b=new o.Vector2;const _=new C.XS;let x=this.model.get("options");this.model.get("synchronized_text"),_.add({python_display:function(){console.log(0),y.model.set("kernel_task",0),y.model.save_changes()}},"python_display").name("info");for(let e=0;e<x.length;e++)_.add({pythonback:function(){console.log(e),y.model.set("kernel_task",e),y.model.save_changes()}},"pythonback").name(x[e]);if(this.model.get("sao")){const e=new m.F(this.scene,this.camera,!0,!0);e.params.saoScale=this.model.get("saoScale"),e.params.saoBias=this.model.get("saoBias"),e.params.saoIntensity=this.model.get("saoIntensity"),e.params.saoKernelRadius=this.model.get("saoKernelRadius"),e.params.saoMinResolution=this.model.get("saoMinResolution"),e.params.saoBlur=this.model.get("saoBlur"),e.params.saoBlurRadius=this.model.get("saoBlurRadius"),e.params.saoBlurStdDev=this.model.get("saoBlurStdDev"),e.params.saoBlurDepthCutoff=this.model.get("saoBlurDepthCutoff"),w.addPass(e)}if(this.model.get("dof")){const e=new u.A(this.scene,this.camera,{focus:this.model.get("focus"),aperture:this.model.get("aperture"),maxblur:this.model.get("max_blur"),width:document.activeElement.clientWidth,height:.6*document.activeElement.clientWidth});e.needsSwap=!0,w.addPass(e),t.bokeh=e}if(this.model.get("fxaa")){const e=new p.T(g.C),t=s.getPixelRatio();e.uniforms.resolution.value.set(1/(t*document.activeElement.clientWidth),1/(t*document.activeElement.clientWidth*.6)),e.renderToScreen=!1,w.addPass(e)}t.composer=w,window.addEventListener("pointermove",(function(){y.model.save_changes()})),window.addEventListener("pointerdown",(function(){y.model.save_changes()})),window.addEventListener("click",(function(e){var t=e.target.getBoundingClientRect();b.x=2*(e.clientX-t.left)/(t.right-t.left)-1,b.y=-2*(e.clientY-t.top)/(t.bottom-t.top)+1,f.setFromCamera(b,i);let s=y.scene.children[0],r=new o.Color;const a=f.intersectObject(s);if(a.length>0){const e=a[0].instanceId;if(n.includes(e)){s.setColorAt(e,new o.Color(y.colors[e][0],y.colors[e][1],y.colors[e][2]));const t=n.indexOf(e);n.splice(t,1)}else s.setColorAt(e,r.setHex(16777215)),n.push(e);y.model.set("selection",n.concat()),y.model.save_changes(),y.touch(),s.instanceColor.needsUpdate=!0}})),window.addEventListener("resize",(function(){i.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),i.updateProjectionMatrix(),s.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth)}));var y=this;s.setAnimationLoop((function(){t.composer.render()}))}init_changed(){this.pos=this.model.get("pos"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.bonds=this.model.get("bonds"),this.radius=this.model.get("radius"),this.selected=this.model.get("selected"),this.count=this.model.get("count");let e=new o.SphereBufferGeometry(1,30,20),t=new o.MeshStandardMaterial;t.roughness=.2,t.metalness=.2;let n=new o.InstancedMesh(e,t,1e4);n.count=this.pos.length,n.instanceMatrix.needsUpdate=!0,this.scene.add(n);let i=new o.CylinderGeometry(.4,.4,1,6,4,!0);i.applyMatrix4((new o.Matrix4).makeRotationX(1.57075));let s=new o.InstancedMesh(i,t,1e4);s.count=this.bonds.length,s.instanceMatrix.needsUpdate=!0,this.scene.add(s);let r=new o.AmbientLight(16777215,.8);this.scene.add(r);const a=new o.DirectionalLight(16777215,.5);a.position.set(1,1,1),this.scene.add(a)}_count_changed(){this.scene.children[0].count=this.model.get("count")}_python_callback(e){console.log(e)}_pos_changed(){this.pos=this.model.get("pos"),this.colors=this.model.get("colors"),this.radius=this.model.get("radius"),this.selection=this.model.get("selection");let e=this.scene.children[0];e.count=this.pos.length;let t=new o.Matrix4;const n=new o.Color;for(let n=0;n<this.pos.length;n++)t.setPosition(this.pos[n][0],this.pos[n][1],this.pos[n][2]),e.setMatrixAt(n,t),e.setColorAt(n,new o.Color(this.colors[n][0],this.colors[n][1],this.colors[n][2]));for(let t=0;t<this.selection.length;t++)e.setColorAt(this.selection[t],n.setHex(16777215));e.instanceMatrix.needsUpdate=!0,e.instanceColor.needsUpdate=!0,this._bonds_changed()}_bonds_changed(){this.pos=this.model.get("pos"),this.bonds=this.model.get("bonds"),this.colors=this.model.get("colors");let e=new o.Matrix4,t=(new o.Matrix4,new o.Matrix4,new o.Object3D),n=(new o.Quaternion,this.scene.children[1]);console.log(this.bonds),n.count=this.bonds.length;for(let s=0;s<this.bonds.length;s++){let r=this.pos[this.bonds[s][0]],a=this.pos[this.bonds[s][1]],d=new o.Vector3(r[0],r[1],r[2]),l=new o.Vector3(a[0],a[1],a[2]);var i=(new o.Vector3).subVectors(l,d);e.lookAt(new o.Vector3(0,0,0),i,new o.Vector3(0,1,0)),t.position.set(.5*(a[0]+r[0]),.5*(a[1]+r[1]),.5*(a[2]+r[2])),t.scale.set(1,1,i.length()),t.setRotationFromMatrix(e),t.updateMatrix(),n.setMatrixAt(s,t.matrix),n.setColorAt(s,new o.Color(.5*this.colors[this.bonds[s][0]][0],.5*this.colors[this.bonds[s][0]][1],.5*this.colors[this.bonds[s][0]][2]))}n.instanceMatrix.needsUpdate=!0}}class S extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"PointModel",_view_name:"PointView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class P extends s.DOMWidgetView{render(){const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const n=new o.WebGLRenderer;this.renderer=n,n.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6);const i=new o.Color(this.model.get("background_color")[0],this.model.get("background_color")[1],this.model.get("background_color")[2]);this.renderer.setClearColor(i,1),this.renderer.antialias=!0;let s=new r.z(this.camera,this.renderer.domElement);this.controls=s,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);const a=new o.BufferGeometry,d=[],l=[],h=new o.Color,c=1e3;for(let e=0;e<5e5;e++){const e=Math.random()*c-500,t=Math.random()*c-500,n=Math.random()*c-500;d.push(e,t,n);const i=e/c+.5,s=t/c+.5,o=n/c+.5;h.setRGB(i,s,o),l.push(h.r,h.g,h.b)}this.col=this.model.get("col");let m=new Float32Array(this.col.buffer);a.setAttribute("color",new o.Float32BufferAttribute(m,3,!1)),this.pos=this.model.get("pos");let u=new Float32Array(this.pos.buffer);a.setAttribute("position",new o.Float32BufferAttribute(u,3,!1)),a.computeBoundingSphere(),a.needsUpdate=!0;const g=new o.PointsMaterial({size:.1,vertexColors:!0});let p=new o.Points(a,g);this.scene.add(p),this.value_changed(),this.model.on("change:value",this.value_changed,this),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:col",this.color_changed,this),n.setAnimationLoop((function(){v.pos=v.model.get("pos");let i=new Float32Array(v.pos.buffer);v.scene.children[0].geometry.setAttribute("position",new o.InstancedBufferAttribute(i,3,!1)),v.scene.children[0].geometry.needsUpdate=!0,n.render(e,t)}));var v=this}value_changed(){console.log("value_changed")}pos_changed(){this.pos=this.model.get("pos");let e=new Float32Array(this.pos.buffer);this.scene.children[0].geometry.setAttribute("position",new o.InstancedBufferAttribute(e,3,!1)),this.scene.children[0].geometry.needsUpdate=!0}color_changed(){this.col=this.model.get("col");let e=new Float32Array(this.col.buffer);this.scene.children[0].geometry.setAttribute("color",new o.InstancedBufferAttribute(e,3,!1)),this.scene.children[0].geometry.attributes.color.needsUpdate=!0}}var W=n(757);class E extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"MorpheusModel",_view_name:"MorpheusView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class V extends s.DOMWidgetView{render(){const e=new o.Scene,t={};this.scene=e,this.pos=this.model.get("pos");let n=new o.PerspectiveCamera(50,document.activeElement.clientWidth/(.65*document.activeElement.clientWidth),.1,1e3);this.camera=n,this.camera.position.z=5;const i=new o.WebGLRenderer;this.renderer=i,i.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(document.activeElement.clientWidth,.65*document.activeElement.clientWidth),this.renderer.setClearColor(16777215,1),this.renderer.antialias=!0;let s=new r.z(this.camera,this.renderer.domElement);this.controls=s,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);let a=new o.BufferGeometry,d=new Float32Array([-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1]);a.setAttribute("position",new o.Float32BufferAttribute(d,3,!1)),a.needsUpdate=!0;let l=new o.MeshPhysicalMaterial({roughness:.7,transmission:.5,thickness:1});l.color=new o.Color(.7,.7,.98);let m=new o.Mesh(a,l);this.scene.add(m);let g=new o.DirectionalLight(16773341,1);g.position.set(0,5,10),this.scene.add(g);let p=new o.DirectionalLight(16777215,.5);p.position.set(1,1,1),this.scene.add(p),this.value_changed(),this.pos_changed(),this.model.on("change:value",this.value_changed,this),this.model.on("change:pos",this.pos_changed,this);const v=new c.C(this.scene,this.camera),w=new h.xC(this.renderer);w.addPass(v);const f=new W.m(new o.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85);f.threshold=.5,f.strength=.5,f.radius=.5,w.addPass(f);const b=new u.A(this.scene,this.camera,{focus:1,aperture:.002,maxblur:.01,width:this.model.get("window_scale")*document.activeElement.clientWidth,height:this.model.get("window_scale")*document.activeElement.clientWidth*.65});b.needsSwap=!0,w.addPass(b),t.bokeh=b,t.composer=w,this.renderer.autoClear=!1,i.setAnimationLoop((function(){t.composer.render(),i.render(e,n)}))}value_changed(){console.log("value_changed")}pos_changed(){console.log("changed_pos"),this.pos=this.model.get("pos");let e=new Float32Array(this.pos.buffer);this.scene.children[0].geometry.setAttribute("position",new o.BufferAttribute(e,3,!1)),this.scene.children[0].geometry.needsUpdate=!0}}class z extends s.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"DenseModel",_view_name:"DenseView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.56.0",_view_module_version:"0.56.0"}}}class F extends s.DOMWidgetView{render(){const e=new o.Scene,t={};this.scene=e,this.pos=this.model.get("pos");let n=new o.PerspectiveCamera(50,document.activeElement.clientWidth/(.65*document.activeElement.clientWidth),.1,1e3);this.camera=n,this.camera.position.z=5;const i=new o.WebGLRenderer;this.renderer=i,i.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(document.activeElement.clientWidth,.65*document.activeElement.clientWidth),this.renderer.setClearColor(2039324,1),this.renderer.antialias=!0;let s=new r.z(this.camera,this.renderer.domElement);this.controls=s,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);const a=new o.PlaneGeometry(1,1),d=new o.MeshBasicMaterial({color:16776960,side:o.DoubleSide});let l=new o.Mesh(a,d);this.scene.add(l);let m=new o.BufferGeometry,g=new Float32Array([-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1]);m.setAttribute("position",new o.Float32BufferAttribute(g,3,!1));let p=new o.MeshPhysicalMaterial({metalness:1,roughness:.27,metalness:1,reflectivity:.5,clearcoat:1,clearcoatRoughness:.49});p.needsUpdate=!0;let v=new o.Mesh(m,p);v.needsUpdate=!0,this.scene.add(v);let w=new o.DirectionalLight(16773341,1);w.position.set(0,5,10),this.scene.add(w),this.value_changed(),this.pos_changed(),this.tex_changed(),this.model.on("change:value",this.value_changed,this),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:tex",this.tex_changed,this);const f=new c.C(this.scene,this.camera),b=new h.xC(this.renderer);b.addPass(f);const _=new W.m(new o.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85);_.threshold=.5,_.strength=.5,_.radius=.5;const x=new u.A(this.scene,this.camera,{focus:1,aperture:.002,maxblur:.01,width:this.model.get("window_scale")*document.activeElement.clientWidth,height:this.model.get("window_scale")*document.activeElement.clientWidth*.65});x.needsSwap=!0,b.addPass(x),t.bokeh=x,t.composer=b,this.renderer.autoClear=!1,i.setAnimationLoop((function(){t.composer.render(),i.render(e,n)}))}value_changed(){console.log("value_changed")}pos_changed(){console.log("changed_pos"),this.pos=this.model.get("pos");let e=new Float32Array(this.pos.buffer);this.scene.children[0].geometry.setAttribute("position",new o.BufferAttribute(e,3,!1))}tex_changed(){console.log("changed_texture"),this.pos=this.model.get("tex"),this.size=this.model.get("size");let e=new Uint8Array(this.tex.buffer);this.scene.children[0].material.map=new o.DataTexture(e,this.size[0],this.size[1]),this.scene.children[0].material.map.needsUpdate=!0}}const R={i8:"0.56.0"}}}]);