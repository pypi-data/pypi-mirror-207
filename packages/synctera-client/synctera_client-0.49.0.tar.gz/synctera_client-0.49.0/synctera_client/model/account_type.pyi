# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>  # noqa: E501

    The version of the OpenAPI document: 0.49.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from synctera_client import schemas  # noqa: F401


class AccountType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The type of the account. In lead mode, this always takes the value of the template. If not
specified in shadow mode, CHECKING will be assumed. Below mentioned are the account types:
* SAVING: Savings account
* CHECKING: Checking account
* LINE_OF_CREDIT: Line of Credit account
* CHARGE_SECURED: (alpha) Secured Charge account, e.g. for use in a Smart Charge Card offering

    """
    
    @schemas.classproperty
    def SAVING(cls):
        return cls("SAVING")
    
    @schemas.classproperty
    def CHECKING(cls):
        return cls("CHECKING")
    
    @schemas.classproperty
    def LINE_OF_CREDIT(cls):
        return cls("LINE_OF_CREDIT")
    
    @schemas.classproperty
    def CHARGE_SECURED(cls):
        return cls("CHARGE_SECURED")
