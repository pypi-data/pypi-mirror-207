{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["MyComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","icsData","initialView","render","props","blob","Blob","type","icsUrl","URL","createObjectURL","_jsx","children","FullCalendar","plugins","dayGridPlugin","iCalendarPlugin","timeGridPlugin","listPlugin","events","url","format","headerToolbar","left","right","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"8QAmBMA,EAAW,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAuBd,OAvBcP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACRM,MAAQ,CAAEC,QAAS,GAAIC,YAAa,gBAAqCb,EAEzEc,OAAS,WAEd,IAAMF,EAAUZ,EAAKe,MAAMV,KAAc,QACnCW,EAAO,IAAIC,KAAK,CAACL,GAAU,CAAEM,KAAM,kBACnCC,EAASC,IAAIC,gBAAgBL,GAC7BH,EAAcb,EAAKe,MAAMV,KAAkB,YAEjD,OACEiB,cAAA,OAAAC,SACED,cAACE,IAAY,CACXC,QAAS,CAACC,IAAeC,IAAiBC,IAAgBC,KAC1DhB,YAAaA,EACbiB,OAAQ,CAACC,IAAKZ,EAAQa,OAAQ,OAC9BC,cAAe,CACbC,KAAM,kBACNC,MAAO,qDAKjB,EAACnC,CAAA,QAAAoC,YAAAzC,EAAA,CAvBc,CAAS0C,KA+BXC,cAAwB3C,GC9CvC4C,IAASzB,OACPQ,cAACkB,IAAMC,WAAU,CAAAlB,SACfD,cAAC3B,EAAW,MAEd+C,SAASC,eAAe,Q","file":"static/js/main.3ec89947.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport listPlugin from '@fullcalendar/list';\nimport iCalendarPlugin from '@fullcalendar/icalendar';\n\ntype InitialViewOptions = 'dayGridMonth' | 'timeGridWeek' | 'timeGridDay' | 'listWeek';\n\ninterface State {\n  icsData: string,\n  initialView: InitialViewOptions\n}\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = { icsData: \"\", initialView: 'dayGridMonth' as InitialViewOptions}\n\n  public render = (): ReactNode => {\n\n    const icsData = this.props.args[\"icsData\"]\n    const blob = new Blob([icsData], { type: 'text/calendar' });\n    const icsUrl = URL.createObjectURL(blob);\n    const initialView = this.props.args[\"initialView\"]\n\n    return (\n      <div>\n        <FullCalendar \n          plugins={[dayGridPlugin, iCalendarPlugin, timeGridPlugin, listPlugin]}\n          initialView={initialView}\n          events={{url: icsUrl, format: 'ics'}}\n          headerToolbar={{\n            left: 'prev,next today',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MyComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}