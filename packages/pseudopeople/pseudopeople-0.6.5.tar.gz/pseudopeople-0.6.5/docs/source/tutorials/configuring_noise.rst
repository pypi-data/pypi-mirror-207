.. _tutorial_configuring_noise:

=================
Configuring Noise
=================

In this tutorial, we will walk through an example of how to customize the amount of noise in
a simulated dataset generated by pseudopeople.

If you haven't already used pseudopeople to generate a dataset with the default settings,
follow the :ref:`quickstart` before continuing with this tutorial.

The problem of fake names
-------------------------

Sometimes when people respond to a survey, they don't want to share their personal information.
If the survey (whether online, on paper, or in person) requires a response, they might just make
something up.

pseudopeople has a noise type to simulate these sorts of responses for first and/or last names:
:ref:`"Use a fake name." <use_a_fake_name>`
With pseudopeople's default settings, this happens just 1% of the time.
But let's say we're concerned it will happen more often in the future, and we want to see how
robust our entity resolution methods are to this issue.

Generating a simulated Current Population Survey
------------------------------------------------

Let's generate some 2025 Current Population Survey (CPS) data in a future scenario where 30% of people use fake last names on the survey.
To do this, we will pass some **configuration** to the :func:`pseudopeople.generate_current_population_survey` function.

.. code-block:: python

    cps_2025 = psp.generate_current_population_survey(year=2025, config={
        'current_population_survey': {
            'column_noise': {
                'last_name': {
                    'use_fake_name': {
                        'cell_probability': 0.3,
                    },
                },
            },
        },
    })

In English, our configuration says: in the **CPS** dataset, for the **last name** column, the **fake name** noise type's **cell probability**
parameter should be 0.3 (30%).
The full set of parameters for each noise type is documented at :ref:`Noise Type Details <noise_type_details>`.
The :code:`column_noise` key specifies that we are configuring column-based noise; the categories of noise are explained in more detail
on the :ref:`noise page <noise_main>`.

Let's take a look at the names in our generated CPS dataset:

.. code-block:: pycon

    >>> cps_2025[['first_name', 'middle_initial', 'last_name']]
       first_name middle_initial          last_name
    0      Regina              S                Coh
    1         Pat              J              Posey
    2   Stephanie              Y             Martin
    3      Alaina              S               Resp
    4       Haley              T                Goh
    5     Katrina              V            Deltoro
    6     Gregory              D             Talley
    7   Catherine              R           Benjamin
    8      Dustin              J           Benjamin
    9        John              S              Bakal
    10  Catherine              K            Trexler
    11     Tamela              V             Female
    12       Reed              J                  F
    13    William              D            Masters
    14    Michael              D      Serna Marquez
    15    Addison              I            Thomson
    16     Denise              A     Harting-Conant
    17      David              J                Goh
    18       Mary              A  Lady Od The House
    19     Pamela              M               Reed
    20       Alex              S             Ojukwu

As expected, we see a number of strings in the last name column that are unlikely to be true last names.
We can check exactly which ones are fake names by comparing to the same dataset without fake name noise in
the last name column.
For brevity, we do not show the steps to do this here, but
we would find that there are seven such strings, which is almost exactly 30% of our 21 respondents.

Increasing noise in first names
-------------------------------

Imagine we also want to increase the probability of a fake first name from its default of 1%.
We can do this by modifying the configuration dictionary. This time, we'll save the configuration dictionary to a variable before using it to generate the dataset:

.. code-block:: python

    config = {
        'current_population_survey': {
            'column_noise': {
                'last_name': {
                    'use_fake_name': {
                        'cell_probability': 0.3,
                    },
                },
                'first_name': {
                    'use_fake_name': {
                        'cell_probability': 0.2,
                    },
                },
            },
        },
    }
    cps_2025 = psp.generate_current_population_survey(year=2025, config=config)

By specifying multiple keys within :code:`column_noise`, we are able to independently adjust noise settings
for different columns.
Here we have set the probability of a fake first name to 0.2 (20%) while retaining the 0.3 (30%) probability
of a fake last name.
Let's see how our CPS data look now:

.. code-block:: pycon

    >>> cps_2025[['first_name', 'middle_initial', 'last_name']]
       first_name middle_initial          last_name
    0      Regina              S                Coh
    1         Pat              J              Posey
    2   Stephanie              Y             Martin
    3      Alaina              S               Resp
    4       Haley              T                Goh
    5     Katrina              V            Deltoro
    6     Gregory              D             Talley
    7   Catherine              R           Benjamin
    8      Dustin              J           Benjamin
    9        John              S              Bakal
    10  Catherine              K            Trexler
    11     Tamela              V             Female
    12   Daughter              J                  F
    13    William              D            Masters
    14    Michael              D      Serna Marquez
    15    Addison              I            Thomson
    16     Denise              A     Harting-Conant
    17      David              J                Goh
    18       Mary              A  Lady Od The House
    19     Pamela              M               Reed
    20          B              S             Ojukwu

Here we see that only respondents number 12 and 20 have used fake first names.
Why aren't there closer to :math:`0.2 * 21 = 4.2` respondents with fake first names?
Remember that the parameter we set was called cell **probability** -- there is randomness
involved in whether or not each cell in the column actually receives noise.

An alternate format for configuration
-------------------------------------

It is also possible to specify configuration in a YAML file.
The file equivalent to our final configuration above would be:

.. literalinclude:: configuration_example.yaml
    :caption:

If :code:`configuration_example.yaml` is in the current working directory,
it can be used like so:

.. code-block:: python

    cps_2025 = psp.generate_current_population_survey(year=2025, config='configuration_example.yaml')

For more on configuration, see the :ref:`Configuration page <configuration_main>`.